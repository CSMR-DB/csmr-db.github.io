{"version":3,"sources":["webpack:///./src/components/Relative.tsx","webpack:///./src/components/ClippedBtn.tsx","webpack:///./src/components/SocialButton.tsx","webpack:///./src/pages/contact.tsx","webpack:///./src/components/flex.tsx","webpack:///./src/components/DynamicIcon.tsx","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./src/components/Absolute.tsx"],"names":["Relative","styled","div","ClippedBtn","props","color","background","StyledDynamicIcon","SocialButton","children","href","iconPath","target","DynamicIcon","path","Absolute","justifyContent","Contacts","text","SecondPage","title","CenteredBlock","Grid","columns","rows","map","key","StyledFlex","Flex","Img","query","render","file","images","edges","find","image","node","relativePath","fluid","childImageSharp","$export","$find","forced","Array","P","F","callbackfn","this","arguments","length","undefined","AbsoluteCenter"],"mappings":"uJAEaA,EAAmDC,IAAOC,IAAV,+DAAGD,CAAH,wB,kBCOhDE,EAKTF,IAAOC,IAAV,iEAAGD,CAAH,uQAWY,SAACG,GAAD,OACPA,EAAMC,OAAS,WAEH,SAACD,GAAD,OACZA,EAAME,YAAc,U,SCXpBC,EAA4DN,IAAOC,IAAV,sFAAGD,CAAH,mCAKlDO,EAM4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,SACAJ,EAFuC,EAEvCA,MACAC,EAHuC,EAGvCA,WACAI,EAJuC,EAIvCA,KACAC,EALuC,EAKvCA,SALuC,OAOvC,uBAAGD,KAAMA,EAAME,OAAO,SACpB,kBAACZ,EAAD,KACE,kBAACO,EAAD,KACE,kBAACM,EAAA,EAAD,CAAaC,KAAMH,KAErB,kBAACI,EAAA,EAAD,KACE,kBAACZ,EAAD,CAAYG,WAAYA,EAAYD,MAAOA,GACzC,kBAAC,IAAD,CAAMW,eAAe,gBACnB,8BAAOP,S,SC5BbQ,EAAuB,CAC3B,CACEX,WAAY,UACZK,SAAU,kBACVD,KAAM,kCACNQ,KAAM,QAER,CACEZ,WAAY,UACZK,SAAU,qBACVD,KAAM,2DACNQ,KAAM,YAER,CACEZ,WAAY,UACZK,SAAU,oBACVD,KAAM,kDACNQ,KAAM,YAuCKC,UAnCuB,kBACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,YAGR,kBAACC,EAAA,EAAD,KACE,6CACA,oYAQA,kBAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,KAAM,GACrBP,EAASQ,KACR,WAAiDC,GAAjD,IAAGpB,EAAH,EAAGA,WAAYK,EAAf,EAAeA,SAAUD,EAAzB,EAAyBA,KAAMQ,EAA/B,EAA+BA,KAA/B,OACE,kBAAC,EAAD,CACEZ,WAAYA,EACZK,SAAUA,EACVD,KAAMA,EACNgB,IAAKA,GAEJR,W,iCC9Df,sDAWMS,EAXN,KAWmE1B,EAAOC,IAAV,uEAAGD,CAAH,uKAEhD,SAACG,GAAD,OACZA,EAAME,YAAc,iBAKH,SAACF,GAAD,OACjBA,EAAMY,gBAAkB,kBAQfY,EAImB,SAAC,GAAD,IAC9BnB,EAD8B,EAC9BA,SACAH,EAF8B,EAE9BA,WACAU,EAH8B,EAG9BA,eAH8B,OAK9B,kBAACW,EAAD,CAAYrB,WAAYA,EAAYU,eAAgBA,GACjDP,K,wIChBCF,EAAiEN,YACrE4B,KADkE,qFAAG5B,CAAH,4DAiB7D,IAAMY,EAE0B,YAEJ,IADjCC,EACiC,EADjCA,KAEA,OACE,kBAAC,IAAD,CAEEgB,MAAK,aAmBLC,OAAQ,gBAnCOC,EAmCJC,EAAH,EAAGA,OAAH,OAnCOD,EAqCXC,EAAOC,MAAMC,MACX,SAACC,GAAD,OAAwBA,EAAMC,KAAKC,eAAiBxB,KArCvD,kBAACP,EAAD,CAAmBgC,MAAOP,EAAKK,KAAKG,gBAAgBD,SAazD,W,iCC3CJ,IAAIE,EAAU,EAAQ,GAClBC,EAAQ,EAAQ,GAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CR,KAAM,SAAcY,GAClB,OAAOL,EAAMM,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,GAAR,CATU,S,wv5GCJV,sCAEaC,EAFb,KAOInD,EAAOC,IAAV,0EAAGD,CAAH","file":"component---src-pages-contact-tsx-96c3fdab5146e4976ab9.js","sourcesContent":["import styled, { StyledComponent } from 'styled-components'\n\nexport const Relative: StyledComponent<'div', any, {}, never> = styled.div`\n  position: relative;\n`\n","import styled, { StyledComponent } from 'styled-components'\n// tslint:disable-next-line: no-implicit-dependencies\nimport { ColorProperty, BackgroundColorProperty } from 'csstype'\n\ninterface IClippedBtnProps {\n  color?: ColorProperty\n  background?: BackgroundColorProperty\n}\n\nexport const ClippedBtn: StyledComponent<\n  'div',\n  any,\n  IClippedBtnProps,\n  never\n> = styled.div`\n  color: transparent;\n  height: 100%;\n  font-size: 2rem;\n  clip-path: circle(1em at 50% 50%);\n  background: transparent;\n  border-radius: 0.25rem;\n  transition: color 0.1s ease-in 0.1s;\n  transition: all 0.25s ease-in-out;\n\n  :hover {\n    color: ${(props: IClippedBtnProps): ColorProperty =>\n      props.color || 'white'};\n    clip-path: circle(8em at 50% 50%);\n    background: ${(props: IClippedBtnProps): BackgroundColorProperty =>\n      props.background || 'grey'};\n  }\n`\n","import React, { ReactNode } from 'react'\n// tslint:disable-next-line: no-implicit-dependencies\nimport { ColorProperty, BackgroundColorProperty } from 'csstype'\nimport { Relative } from './Relative'\nimport { DynamicIcon } from './DynamicIcon'\nimport { AbsoluteCenter } from './Absolute'\nimport { ClippedBtn } from './ClippedBtn'\nimport { Flex } from './flex'\nimport styled, { StyledComponent } from 'styled-components'\n\ninterface ISocialButtonsProps {\n  children: ReactNode\n  href: string\n  color?: ColorProperty\n  background?: BackgroundColorProperty\n  iconPath: string\n}\n\nconst StyledDynamicIcon: StyledComponent<'div', any, {}, never> = styled.div`\n  margin: 0 auto;\n  max-width: 4rem;\n`\n\nexport const SocialButton: ({\n  children,\n  color,\n  background,\n  href,\n  iconPath,\n}: ISocialButtonsProps) => JSX.Element = ({\n  children,\n  color,\n  background,\n  href,\n  iconPath,\n}: ISocialButtonsProps): JSX.Element => (\n  <a href={href} target=\"blank\">\n    <Relative>\n      <StyledDynamicIcon>\n        <DynamicIcon path={iconPath} />\n      </StyledDynamicIcon>\n      <AbsoluteCenter>\n        <ClippedBtn background={background} color={color}>\n          <Flex justifyContent=\"space-around\">\n            <span>{children}</span>\n          </Flex>\n        </ClippedBtn>\n      </AbsoluteCenter>\n    </Relative>\n  </a>\n)\n","import React from 'react'\nimport { Layout } from '../components/layout'\nimport { SEO } from '../components/seo'\nimport { Grid } from '../components/Grid'\nimport { SocialButton } from '../components/SocialButton'\nimport { CenteredBlock } from '../components/CenteredBlock'\n// tslint:disable-next-line: no-implicit-dependencies\nimport { BackgroundColorProperty } from 'csstype'\n\ninterface IContact {\n  background: BackgroundColorProperty\n  iconPath: string\n  href: string\n  text: string\n}\n\nconst Contacts: IContact[] = [\n  {\n    background: '#000000',\n    iconPath: 'icons/email.png',\n    href: 'mailto://casimir.db@outlook.com',\n    text: 'Mail',\n  },\n  {\n    background: '#007AB9',\n    iconPath: 'icons/linkedin.png',\n    href: 'https://www.linkedin.com/in/casimir-de-bruijn-309990161/',\n    text: 'LinkedIn',\n  },\n  {\n    background: '#8C9EFF',\n    iconPath: 'icons/discord.png',\n    href: 'https://discordapp.com/users/187303558599671808',\n    text: 'Discord',\n  },\n]\n\nconst SecondPage: () => JSX.Element = (): JSX.Element => (\n  <Layout>\n    <SEO\n      title=\"Contact\"\n      // description=\"Get in touch with me through some social links\"\n    />\n    <CenteredBlock>\n      <h1>Get in touch!</h1>\n      <p>\n        I don't do Twitter and I don't really use Facebook other than checking\n        it about twice a year. However, there are other ways to get in touch\n        with me. I don't have a fancy form (yet), but that shouldn't be a\n        dealbreaker. I check my mail at least once a day, LinkedIn weekly and\n        I'm pretty much always available on Discord. You just do whatever feels\n        right ðŸ˜‰.\n      </p>\n      <Grid columns={3} rows={1}>\n        {Contacts.map(\n          ({ background, iconPath, href, text }: IContact, key: number) => (\n            <SocialButton\n              background={background}\n              iconPath={iconPath}\n              href={href}\n              key={key}\n            >\n              {text}\n            </SocialButton>\n          )\n        )}\n      </Grid>\n    </CenteredBlock>\n  </Layout>\n)\n\n// tslint:disable-next-line: no-default-export\nexport default SecondPage\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\n// tslint:disable-next-line: no-implicit-dependencies\nimport { BackgroundColorProperty, JustifyContentProperty } from 'csstype'\n\ninterface IFlexProps {\n  children: ReactNode\n  background?: BackgroundColorProperty\n  justifyContent?: JustifyContentProperty\n}\n\nconst StyledFlex: StyledComponent<'div', any, IFlexProps, never> = styled.div`\n  position: relative;\n  background: ${(props: IFlexProps): BackgroundColorProperty =>\n    props.background || 'transparent'};\n\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: ${(props: IFlexProps): JustifyContentProperty =>\n    props.justifyContent || 'space-around'};\n  transition: all 0.25s ease-in-out;\n\n  :hover {\n    background: transparent;\n  }\n`\n\nexport const Flex: ({\n  children,\n  background,\n  justifyContent,\n}: IFlexProps) => JSX.Element = ({\n  children,\n  background,\n  justifyContent,\n}: IFlexProps): JSX.Element => (\n  <StyledFlex background={background} justifyContent={justifyContent}>\n    {children}\n  </StyledFlex>\n)\n","import React from 'react'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled, { StyledComponent } from 'styled-components'\n\ninterface IFluidImage {\n  node: {\n    extension: string\n    relativePath: string\n    childImageSharp: {\n      fluid: FluidObject\n    }\n  }\n}\n\ninterface IImagesRoot {\n  // images: {\n  //   edges: (IFluidImage)[]\n  // }\n  images: any // temp fix\n}\n\nconst StyledDynamicIcon: StyledComponent<typeof Img, any, {}, never> = styled(\n  Img\n)`\n  max-width: 4rem;\n  width: 100%;\n  max-height: 4rem;\n  height: 100%;\n`\n\nfunction renderImage(file: IFluidImage): JSX.Element {\n  return <StyledDynamicIcon fluid={file.node.childImageSharp.fluid} />\n}\n\ninterface IDynamicIconProps {\n  path: string\n}\n\nexport const DynamicIcon: ({\n  path,\n}: IDynamicIconProps) => JSX.Element = function({\n  path,\n}: IDynamicIconProps): JSX.Element {\n  return (\n    <StaticQuery\n      // tslint:disable-next-line: no-void-expression\n      query={graphql`\n        query {\n          images: allFile(\n            filter: { extension: { regex: \"/jpeg|jpg|png|gif/\" } }\n          ) {\n            edges {\n              node {\n                extension\n                relativePath\n                childImageSharp {\n                  fluid(maxWidth: 128) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={({ images }: IImagesRoot): JSX.Element | null =>\n        renderImage(\n          images.edges.find(\n            (image: IFluidImage) => image.node.relativePath === path\n          ) // returns images like this node: {extension: \"png\", relativePath: \"gatsby-icon.png\", childImageSharp: {â€¦}}\n        )\n      }\n    />\n  )\n}\n\n/**\n * Question remains: how much impact will many (100s) of images have?\n */\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const AbsoluteCenter: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`\n"],"sourceRoot":""}