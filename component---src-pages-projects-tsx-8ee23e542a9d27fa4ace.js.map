{"version":3,"sources":["webpack:///./src/pages/projects.tsx","webpack:///./src/components/Card.tsx","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./src/components/ArticleTags.tsx","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/date-fns/esm/toDate/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./node_modules/date-fns/esm/parseISO/index.js","webpack:///./src/components/DateFormatted.tsx","webpack:///./src/components/ReadingTime.tsx","webpack:///./src/components/StyledIFrame.tsx","webpack:///./src/components/CardHeaderImageOrVideo.tsx","webpack:///./src/components/ProjectCard.tsx","webpack:///./src/components/ArticleBody.tsx"],"names":["ProjectsList","title","description","columns","maxWidth","query","render","projectsData","edges","map","i","node","frontmatter","timeToRead","tags","video","featuredVideo","image","featuredImage","key","body","excerpt","path","date","Card","styled","article","CardHeader","header","CardHeaderFeaturedImage","div","maxHeight","CardHeaderText","CardHeaderIconWrapper","props","backgroundColor","CardBody","main","CardFooter","footer","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","length","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","l","parseInt","value","arguments","that","this","valueOf","call","keys","split","j","constructor","ArticleTags","tag","to","toLocaleLowerCase","replace","$export","$find","KEY","forced","Array","P","F","findIndex","callbackfn","undefined","toDate","TypeError","argStr","Object","toString","Date","getTime","console","warn","Error","stack","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","dirtyOptions","options","width","defaultWidth","formats","full","medium","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","pattern","test","object","predicate","hasOwnProperty","findKey","valueCallback","rest","formatDistance","token","count","result","addSuffix","comparison","formatLong","formatRelative","_date","_baseDate","_options","localize","parsePattern","parseResult","any","index","weekStartsOn","firstWeekContainsDate","toInteger","isNaN","Math","ceil","floor","subMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","addMilliseconds","addLeadingZeros","targetLength","sign","output","abs","y","signedYear","getUTCFullYear","year","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","MILLISECONDS_IN_WEEK","getUTCISOWeek","fourthOfJanuary","startOfUTCISOWeekYear","round","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","getUTCWeek","firstWeek","startOfUTCWeekYear","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","isoDayOfWeek","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","p","dateTimeFormat","datePattern","timePattern","MILLISECONDS_IN_MINUTE","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","protectedDayOfYearTokens","protectedWeekYearTokens","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","dirtyFormatStr","formatStr","isValid","utcDate","formatterOptions","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","indexOf","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","MILLISECONDS_IN_HOUR","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","dateString","timeString","array","substr","exec","splitDateString","parseYearResult","regex","RegExp","captures","century","restDateString","parseYear","isWeekDate","parseDateUnit","_year","validateWeekDate","isoWeekYear","fourthOfJanuaryDay","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseDate","parseTimeUnit","seconds","validateTime","parseTime","timezoneString","_hours","validateTimezone","parseTimezone","fullTime","fullTimeDate","fullTimeDateDiffDay","setDate","getDate","offsetDiff","parseFloat","DateFormatted","ReadingTime","StyledIFrame","iframe","CardHeaderImageOrVideo","fluid","childImageSharp","height","src","frameborder","allow","allowfullscreen","ProjectCard","StyledLink","isArray","url","href","target","text","ArticleBody"],"mappings":"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","file":"component---src-pages-projects-tsx-8ee23e542a9d27fa4ace.js","sourcesContent":["import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport { Layout } from '../components/layout'\nimport { Grid } from '../components/Grid'\nimport { IEdge, IProjectsAllMarkdownRemark } from '../templates/interfaces'\nimport { ProjectCard } from '../components/ProjectCard'\nimport { SEO } from '../components/seo'\nimport { CenteredBlock } from '../components/CenteredBlock'\n\n// tslint:disable-next-line: no-void-expression\nconst PAGE_QUERY: void = graphql`\n  query {\n    projectsData: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/projects/\" } } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            featuredVideo\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 960) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            excerpt\n            tags\n            date\n          }\n          wordCount {\n            words\n            sentences\n            paragraphs\n          }\n          timeToRead\n          excerpt\n          id\n        }\n      }\n    }\n  }\n`\n\nconst ProjectsList: () => JSX.Element = (): JSX.Element => {\n  return (\n    <Layout>\n      <SEO title=\"Projects\" description=\"These are some projects I did\" />\n      <CenteredBlock>\n        <h1>Hey! These are some of my projects</h1>\n        <p>\n          In chronological order, from newest to oldest. These are some projects\n          I worked on that I am proud of, that taught me a lot and / or got me\n          some decent grades. Not everything in here has to do with programming.\n          I also included some projects I made using Adobe Illustrator and After\n          Effects. The first projects were part of courses in a timeframe of\n          about 10 weeks. That meant going from 0 - 100 in roughly 10 weeks,\n          allocating time for other courses as well (about 4 at a time).\n        </p>\n      </CenteredBlock>\n      <Grid\n        columns={'repeat(auto-fill, minmax(32rem,1fr))'}\n        maxWidth={'100rem'}\n      >\n        <StaticQuery\n          query={PAGE_QUERY}\n          render={({\n            projectsData,\n          }: {\n            projectsData: IProjectsAllMarkdownRemark\n          }): JSX.Element[] => {\n            return projectsData.edges.map(\n              ({ node: { frontmatter, timeToRead } }: IEdge, i: number) => (\n                <ProjectCard\n                  title={frontmatter.title}\n                  tags={frontmatter.tags}\n                  video={frontmatter.featuredVideo}\n                  image={frontmatter.featuredImage}\n                  key={i}\n                  body={frontmatter.excerpt}\n                  timeToRead={timeToRead}\n                  path={frontmatter.path}\n                  date={frontmatter.date}\n                />\n              )\n            )\n          }}\n        />\n      </Grid>\n    </Layout>\n  )\n}\n\n// tslint:disable-next-line: no-default-export\nexport default ProjectsList\n","import styled, { StyledComponent } from 'styled-components'\n// tslint:disable-next-line: no-implicit-dependencies\nimport { BackgroundColorProperty, MaxHeightProperty } from 'csstype'\n\nexport const Card: StyledComponent<'article', any, {}, never> = styled.article`\n  position: relative;\n  border-radius: 0.25rem;\n  display: grid;\n  grid-template-areas: 'header' 'body' 'footer';\n  grid-template-rows: auto 1fr auto;\n  overflow: hidden;\n  background: white;\n  box-shadow: 0 0.075rem 0.075rem rgba(0, 0, 0, 0.1),\n    0 0.125rem 0.125rem rgba(0, 0, 0, 0.25);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n  & header img {\n    transition: all 0.2s ease-in-out !important;\n  }\n\n  &:hover {\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.25),\n      0 0.25rem 0.25rem rgba(0, 0, 0, 0.2);\n    transform: translateY(-4px);\n\n    & header img {\n      transform: scale(1.1);\n    }\n  }\n\n  & h1 {\n    font-size: 1.5em;\n    margin: 0;\n  }\n\n  & h2 {\n    font-size: 1.1em;\n    font-style: italic;\n    margin: 0;\n    color: #aaa;\n    margin-bottom: 1rem;\n  }\n\n  & p {\n    margin: 0;\n    text-align: justify;\n  }\n`\n\nexport const CardHeader: StyledComponent<\n  'header',\n  any,\n  {},\n  never\n> = styled.header`\n  /* margin-bottom: 2em; */\n  grid-area: 'header';\n`\n\ninterface ICardHeaderFeaturedImageProps {\n  maxHeight?: MaxHeightProperty<1>\n}\n\nexport const CardHeaderFeaturedImage: StyledComponent<\n  'div',\n  any,\n  ICardHeaderFeaturedImageProps,\n  never\n> = styled.div`\n  max-height: ${({\n    maxHeight,\n  }: ICardHeaderFeaturedImageProps): MaxHeightProperty<1> =>\n    maxHeight || '18rem'};\n  min-height: ${({\n    maxHeight,\n  }: ICardHeaderFeaturedImageProps): MaxHeightProperty<1> =>\n    maxHeight || '18rem'};\n  overflow: hidden;\n\n  & > * {\n    max-height: ${({\n      maxHeight,\n    }: ICardHeaderFeaturedImageProps): MaxHeightProperty<1> =>\n      maxHeight || '18rem'};\n    min-height: ${({\n      maxHeight,\n    }: ICardHeaderFeaturedImageProps): MaxHeightProperty<1> =>\n      maxHeight || '18rem'};\n  }\n`\n\nexport const CardHeaderText: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding: 2em 2em 0 2em;\n\n  & > * {\n    margin: 0;\n  }\n`\n\ninterface ICardHeaderIconWrapperProps {\n  backgroundColor: BackgroundColorProperty\n}\n\nexport const CardHeaderIconWrapper: StyledComponent<\n  'div',\n  any,\n  ICardHeaderIconWrapperProps,\n  never\n> = styled.div`\n  border-radius: 999px;\n  overflow: hidden;\n  max-width: 4em;\n  width: 100%;\n  max-height: 4em;\n  height: 100%;\n  background: ${(props: ICardHeaderIconWrapperProps): BackgroundColorProperty =>\n    props.backgroundColor || '#DDD'};\n  padding: 0.5em;\n`\n\nexport const CardBody: StyledComponent<'main', any, {}, never> = styled.main`\n  position: relative;\n  padding: 2em;\n  grid-area: 'body';\n`\n\nexport const CardFooter: StyledComponent<\n  'footer',\n  any,\n  {},\n  never\n> = styled.footer`\n  background: #eee;\n  padding: 2em;\n  border-top: 1px solid #ddd;\n  grid-area: 'footer';\n`\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","import React from 'react'\nimport { StyledLink } from './StyledLink'\n\nexport const ArticleTags: ({ tags }: { tags?: string[] }) => JSX.Element = ({\n  tags,\n}: {\n  tags?: string[]\n}): JSX.Element => (\n  <p>\n    Tags:{' '}\n    {tags &&\n      tags.map((tag: string, i: number) => (\n        <span key={i}>\n          <StyledLink\n            to={`/tag/${tag.toLocaleLowerCase().replace(/\\s/gi, '_')}`}\n          >\n            {tag}\n          </StyledLink>\n          {i + 1 < tags.length ? ', ' : ''}\n        </span>\n      ))}\n  </p>\n)\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import \"core-js/modules/es6.regexp.replace\";\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  \"long\": 'MMMM do, y',\n  medium: 'MMM d, y',\n  \"short\": 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  \"long\": 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  \"short\": 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  \"long\": \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  \"short\": '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import \"core-js/modules/es6.number.constructor\";\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  \"short\": ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = parsePatterns.findIndex(function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  \"short\": /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import \"core-js/modules/es6.number.constructor\";\nexport default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n\nfunction dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import \"core-js/modules/es6.array.index-of\";\nvar protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.map\";\nimport isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `true`        |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport toInteger from '../_lib/toInteger/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var fullTime = timestamp + time;\n    var fullTimeDate = new Date(fullTime);\n    offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n    var fullTimeDateDiffDay = new Date(fullTime);\n\n    if (offset > 0) {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() + 1);\n    } else {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() - 1);\n    }\n\n    var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateDiffDay) - offset;\n\n    if (offsetDiff > 0) {\n      offset += offsetDiff;\n    }\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import React from 'react'\nimport { format, parseISO } from 'date-fns'\n\nexport const DateFormatted: ({\n  dateString,\n}: {\n  dateString?: string\n}) => JSX.Element | null = ({\n  dateString,\n}: {\n  dateString?: string\n}): JSX.Element | null =>\n  (dateString && <span>{format(parseISO(dateString), 'dd MMM yyyy')}</span>) ||\n  null\n","import React from 'react'\n\nexport const ReadingTime: ({\n  timeToRead,\n}: {\n  timeToRead?: number\n}) => JSX.Element | null = ({\n  timeToRead,\n}: {\n  timeToRead?: number\n}): JSX.Element | null =>\n  timeToRead ? (\n    <span>\n      Reading time: ~{timeToRead} minute{timeToRead !== 1 ? 's' : ''}\n    </span>\n  ) : null\n","import styled, { StyledComponent } from 'styled-components'\n\ninterface IStyledIFrameProps {\n  frameborder: string\n  allow: string\n  allowfullscreen: boolean\n}\n\nexport const StyledIFrame: StyledComponent<\n  'iframe',\n  any,\n  IStyledIFrameProps,\n  never\n> = styled.iframe`\n  max-width: 100%;\n  border: none;\n  width: 100%;\n  margin: 0;\n`\n","import React from 'react'\nimport { CardHeaderFeaturedImage } from './Card'\nimport { DynamicImage } from './dynamicimage'\nimport { StyledIFrame } from './StyledIFrame'\nimport Img from 'gatsby-image'\nimport { IFeaturedImage } from '../templates/interfaces'\n// tslint:disable-next-line: no-implicit-dependencies\nimport { MaxHeightProperty } from 'csstype'\n\ninterface IImageOrVideo {\n  image?: string | IFeaturedImage\n  video?: string\n  maxHeight?: MaxHeightProperty<1>\n}\n\nexport const CardHeaderImageOrVideo: ({\n  image,\n  video,\n  maxHeight,\n}: IImageOrVideo) => JSX.Element = ({\n  image,\n  video,\n  maxHeight,\n}: IImageOrVideo): JSX.Element => (\n  <CardHeaderFeaturedImage maxHeight={maxHeight}>\n    {image && typeof image === 'string' ? (\n      <DynamicImage path={image} />\n    ) : (\n      (image && typeof image !== 'string' && (\n        <Img fluid={image.childImageSharp.fluid} />\n      )) ||\n      (video && (\n        <StyledIFrame\n          width=\"960\"\n          height=\"340\"\n          src={video}\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        ></StyledIFrame>\n      ))\n    )}\n  </CardHeaderFeaturedImage>\n)\n","import React from 'react'\nimport { StringOrUrlArray } from '../types/StringOrUrlObject'\nimport { Card, CardHeader, CardHeaderText, CardBody, CardFooter } from './Card'\nimport { IFeaturedImage } from '../templates/interfaces'\nimport { ArticleBody } from './ArticleBody'\nimport { CardHeaderImageOrVideo } from './CardHeaderImageOrVideo'\nimport { ArticleTags } from './ArticleTags'\nimport { StyledLink } from './StyledLink'\nimport { DateFormatted } from './DateFormatted'\nimport { ReadingTime } from './ReadingTime'\n\ninterface IProjectCardProps {\n  image?: string | IFeaturedImage\n  video?: string\n  title: string\n  body?: StringOrUrlArray\n  tags?: string[]\n  html?: string\n  date?: string\n  timeToRead?: number\n  path: string\n}\n\nexport const ProjectCard: ({\n  image,\n  video,\n  title,\n  body,\n  tags,\n  // html,\n  date,\n  timeToRead,\n  path,\n}: IProjectCardProps) => JSX.Element = ({\n  image,\n  video,\n  title,\n  body,\n  tags,\n  // html,\n  date,\n  timeToRead,\n  path,\n}: IProjectCardProps): JSX.Element => (\n  <Card>\n    <CardHeader>\n      <CardHeaderImageOrVideo video={video} image={image} />\n      <CardHeaderText>\n        <h1>\n          <StyledLink to={path}>{title}</StyledLink>\n        </h1>\n        <h6>\n          <DateFormatted dateString={date} />\n          <span> · </span>\n          <ReadingTime timeToRead={timeToRead} />\n        </h6>\n      </CardHeaderText>\n    </CardHeader>\n    <CardBody>\n      {ArticleBody({ body })}\n      {/* {html && <div dangerouslySetInnerHTML={{ __html: html }} />} */}\n    </CardBody>\n    <CardFooter>\n      <ArticleTags tags={tags} />\n    </CardFooter>\n  </Card>\n)\n","import React from 'react'\nimport { StringOrUrlObject, StringOrUrlArray } from '../types/StringOrUrlObject'\nimport { StyledA } from './StyledLink'\n\nexport function ArticleBody({\n  body,\n}: {\n  body?: StringOrUrlArray\n}): JSX.Element | null {\n  return (\n    (body && (\n      <p>\n        {Array.isArray(body)\n          ? body.map((string: StringOrUrlObject, i: number) => {\n              if (typeof string !== 'string' && string.url) {\n                return (\n                  <StyledA href={string.url} target=\"blank\" key={i}>\n                    {string.text}\n                  </StyledA>\n                )\n              }\n\n              return string\n            })\n          : body}\n      </p>\n    )) ||\n    null\n  )\n}\n"],"sourceRoot":""}