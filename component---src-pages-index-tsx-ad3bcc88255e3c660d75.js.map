{"version":3,"sources":["webpack:///./src/components/ContentSeparator.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCards.tsx","webpack:///./src/components/compositions/card/projectcard/ProjectCard.tsx","webpack:///./src/components/ArticleBody.tsx","webpack:///./src/components/compositions/card/projectcard/ProjectCards.tsx","webpack:///./src/components/compositions/card/Card.tsx","webpack:///./src/components/Heart.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardIndicator.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardBackdrop.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardBody.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardHeader.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCard.tsx","webpack:///./src/components/LifedUpWrapper.tsx","webpack:///./src/layouts/IndexLayout.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/compositions/card/CardBody.tsx","webpack:///./src/components/compositions/card/CardFooter.tsx","webpack:///./src/components/CTAButton.tsx","webpack:///./src/components/compositions/card/CardHeader.tsx","webpack:///./src/components/compositions/card/CardHeaderText.tsx"],"names":["ContentSeparator","styled","div","SkillCards","edges","map","i","frontmatter","node","level","title","description","excerpt","time","key","index","skillColor","ProjectCard","image","video","body","tags","date","timeToRead","path","from","scale","opacity","duration","delay","ease","Card","CardHeader","CardHeaderImageOrVideo","CardHeaderText","StyledLink","to","DateFormatted","dateString","ReadingTime","CardBody","Array","isArray","string","url","href","target","text","ArticleBody","CardFooter","ArticleTags","ProjectCards","featuredVideo","featuredImage","article","theme","breakpoints","min","desktop","max","smartphone","StyledHeart","svg","fill","css","Heart","React","forwardRef","props","ref","viewBox","id","d","SkillCardIndicator","litColor","instance","width","height","StyledSkillCardBackdrop","attrs","className","SkillCardBackdrop","children","SkillCardBody","SkillCardHeader","StyledSkillCard","SkillCard","x","DynamicImage","replace","toLocaleLowerCase","Flex","justifyContent","direction","color","count","Math","sqrt","LiftedUpWrapper","IndexLayout","site","skillsetData","programmingData","SEO","siteMetadata","CenteredBlock","maxWidth","Grid","columns","CTAButton","IndexPage","data","main","footer","style","Link","header"],"mappings":"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","file":"component---src-pages-index-tsx-ad3bcc88255e3c660d75.js","sourcesContent":["import styled, { StyledComponent } from 'styled-components'\n\nexport const ContentSeparator: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding-bottom: 4rem;\n`\n","import React from 'react'\n\nimport {\n  ISkillsetAllMarkdownRemark,\n  ISkillsetEdge,\n} from '../../../../types/interfaces'\n\nimport { SkillCard } from './SkillCard'\n\nexport function SkillCards({ edges }: ISkillsetAllMarkdownRemark): JSX.Element {\n  return (\n    <>\n      {edges.map(\n        ({ node: { frontmatter } }: ISkillsetEdge, i: number): JSX.Element => (\n          <SkillCard\n            level={frontmatter.level || 0}\n            title={frontmatter.title}\n            description={frontmatter.excerpt}\n            time={frontmatter.time}\n            key={i}\n            index={i}\n            skillColor={frontmatter.skillColor}\n          />\n        )\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Tween } from 'react-gsap'\n\nimport { StringOrUrlArray } from '../../../../types/StringOrUrlObject'\nimport { IFeaturedImage } from '../../../../types/interfaces'\n\nimport { Card } from '../Card'\nimport { ArticleBody } from '../../../ArticleBody'\nimport { CardHeaderImageOrVideo } from '../CardHeaderImageOrVideo'\nimport { ArticleTags } from '../../../ArticleTags'\nimport { StyledLink } from '../../../StyledLink'\nimport { DateFormatted } from '../../../DateFormatted'\nimport { ReadingTime } from '../../../ReadingTime'\nimport { CardHeader } from '../CardHeader'\nimport { CardFooter } from '../CardFooter'\nimport { CardBody } from '../CardBody'\nimport { CardHeaderText } from '../CardHeaderText'\n\ninterface IProjectCardProps {\n  index: number\n  image?: string | IFeaturedImage\n  video?: string\n  title: string\n  body?: StringOrUrlArray\n  tags?: string[]\n  html?: string\n  date?: string\n  timeToRead?: number\n  path: string\n}\n\nexport const ProjectCard: (props: IProjectCardProps) => JSX.Element = ({\n  index,\n  image,\n  video,\n  title,\n  body,\n  tags,\n  date,\n  timeToRead,\n  path,\n}: IProjectCardProps): JSX.Element => (\n  <Tween\n    from={{ scale: 0.75, opacity: 0 }}\n    duration={1}\n    delay={0.25 + index * 0.125}\n    ease=\"back\"\n  >\n    <Card>\n      <CardHeader>\n        <CardHeaderImageOrVideo video={video} image={image} />\n        <CardHeaderText>\n          <h1>\n            <StyledLink to={path}>{title}</StyledLink>\n          </h1>\n          <h6>\n            <DateFormatted dateString={date} />\n            <span> · </span>\n            <ReadingTime timeToRead={timeToRead} />\n          </h6>\n        </CardHeaderText>\n      </CardHeader>\n      <CardBody>{ArticleBody({ body })}</CardBody>\n      <CardFooter>\n        <ArticleTags tags={tags} />\n      </CardFooter>\n    </Card>\n  </Tween>\n)\n","import React from 'react'\n\nimport { StringOrUrlObject, StringOrUrlArray } from '../types/StringOrUrlObject'\n\nimport { StyledA } from './StyledLink'\n\ninterface IArticleBodyProps {\n  body?: StringOrUrlArray\n}\n\nexport function ArticleBody({ body }: IArticleBodyProps): JSX.Element | null {\n  return (\n    (body && (\n      <p>\n        {Array.isArray(body)\n          ? body.map((string: StringOrUrlObject, i: number):\n              | JSX.Element\n              | string => {\n              if (typeof string !== 'string' && string.url) {\n                return (\n                  <StyledA href={string.url} target=\"blank\" key={i}>\n                    {string.text}\n                  </StyledA>\n                )\n              }\n\n              return string as string\n            })\n          : body}\n      </p>\n    )) ||\n    null\n  )\n}\n","import React from 'react'\n\nimport { IProjectsAllMarkdownRemark, IEdge } from '../../../../types/interfaces'\n\nimport { ProjectCard } from './ProjectCard'\n\nexport function ProjectCards({\n  edges,\n}: IProjectsAllMarkdownRemark): JSX.Element {\n  return (\n    <>\n      {edges.map(\n        (\n          { node: { frontmatter, timeToRead } }: IEdge,\n          i: number\n        ): JSX.Element => (\n          <ProjectCard\n            title={frontmatter.title}\n            tags={frontmatter.tags}\n            video={frontmatter.featuredVideo}\n            image={frontmatter.featuredImage}\n            body={frontmatter.excerpt}\n            timeToRead={timeToRead}\n            path={frontmatter.path}\n            date={frontmatter.date}\n            key={i}\n            index={i}\n          />\n        )\n      )}\n    </>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\nimport { theme } from '../../../data/theme'\n\nexport const Card: StyledComponent<'article', any, {}, never> = styled.article`\n  position: relative;\n  height: 100%;\n  border-radius: 0.25rem;\n  display: grid;\n  grid-template-areas: 'header' 'body' 'footer';\n  grid-template-rows: auto 1fr auto;\n  overflow: hidden;\n  background: white;\n  box-shadow: 0 0.075rem 0.075rem rgba(0, 0, 0, 0.1),\n    0 0.125rem 0.125rem rgba(0, 0, 0, 0.25);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n  & header img {\n    transition: all 0.2s ease-in-out !important;\n  }\n\n  @media ${theme.breakpoints.min.desktop} {\n    &:hover {\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.25),\n        0 0.25rem 0.25rem rgba(0, 0, 0, 0.2);\n\n      & header img {\n        transform: scale(1.1);\n      }\n    }\n  }\n\n  & h1 {\n    font-size: 1.1em;\n    margin: 0;\n  }\n\n  & h2 {\n    font-size: 1em;\n    font-style: italic;\n    margin: 0;\n    color: #aaa;\n    margin-bottom: 1rem;\n  }\n\n  & p {\n    text-align: justify;\n\n    @media ${theme.breakpoints.max.smartphone} {\n      text-align: left;\n    }\n  }\n`\n","import React from 'react'\nimport styled, {\n  StyledComponent,\n  css,\n  FlattenSimpleInterpolation,\n} from 'styled-components'\nimport { FillProperty } from 'csstype'\n\nimport { AnyExoticRefComponent, AnyExoticRefTargets } from '../types/types'\n\nexport interface IHeartProps {\n  height: string\n  width: string\n  fill: FillProperty\n}\n\nexport const StyledHeart: StyledComponent<\n  'svg',\n  any,\n  IHeartProps,\n  never\n> = styled.svg`\n  ${({ fill }: IHeartProps): FlattenSimpleInterpolation => css`\n    fill: ${fill};\n  `}\n`\n\nexport const Heart: AnyExoticRefComponent<IHeartProps> = React.forwardRef(\n  (props: IHeartProps, ref: AnyExoticRefTargets): JSX.Element => (\n    <StyledHeart {...props} viewBox=\"0 0 315 342\" ref={ref}>\n      <g id=\"heart\">\n        <path d=\"M0 200 v-200 h200 a100,100 90 0,1 0,200 a100,100 90 0,1 -200,0 z\" />\n      </g>\n    </StyledHeart>\n  )\n)\n","import React from 'react'\nimport { ColorProperty } from 'csstype'\nimport { Tween } from 'react-gsap'\n\nimport { Heart } from '../../../Heart'\n\ninterface ISkillCardIndicator {\n  litColor: ColorProperty\n  index: number\n  instance: number\n}\n\nexport function SkillCardIndicator({\n  litColor,\n  index,\n  instance,\n}: ISkillCardIndicator): JSX.Element {\n  return (\n    <Tween\n      from={{ scale: 8, opacity: 0 }}\n      duration={0.125}\n      delay={1 + index / 8 + instance * 0.125}\n    >\n      <Heart fill={litColor} width={'1rem'} height={'1rem'} />\n    </Tween>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\nimport { Tween } from 'react-gsap'\n\nconst StyledSkillCardBackdrop: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div.attrs({ className: 'backdrop' })`\n  transition: all ease 0.5s;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  width: 100%;\n  max-width: 8rem;\n`\n\nexport function SkillCardBackdrop({\n  children,\n  index,\n}: {\n  children: ReactNode\n  index: number\n}): JSX.Element {\n  return (\n    <Tween\n      to={{ opacity: 0.25 }}\n      duration={1}\n      delay={1 + index * 0.125}\n      ease=\"power1\"\n    >\n      <StyledSkillCardBackdrop>{children}</StyledSkillCardBackdrop>\n    </Tween>\n  )\n}\n","import React from 'react'\nimport { Timeline, Tween } from 'react-gsap'\n\nimport {\n  StringOrUrlArray,\n  StringOrUrlObject,\n} from '../../../../types/StringOrUrlObject'\n\nimport { StyledA } from '../../../StyledLink'\n\ninterface ISkillCardBodyProps {\n  description: StringOrUrlArray\n  index: number\n}\nexport function SkillCardBody({\n  description,\n  index,\n}: ISkillCardBodyProps): JSX.Element {\n  return (\n    <Timeline>\n      <Tween\n        from={{ opacity: 0 }}\n        duration={1}\n        delay={1 + index * 0.125}\n        ease=\"power1\"\n      >\n        <p>\n          {Array.isArray(description)\n            ? description.map((string: StringOrUrlObject, i: number):\n                | JSX.Element\n                | string => {\n                if (typeof string !== 'string' && string.url !== '') {\n                  return (\n                    <StyledA href={string.url} target=\"blank\" key={i}>\n                      {string.text}\n                    </StyledA>\n                  )\n                }\n\n                return string as string\n              })\n            : description}\n        </p>\n      </Tween>\n    </Timeline>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const SkillCardHeader: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding: 2rem 2rem 0 2rem;\n\n  h1 {\n    font-size: 1rem;\n    font-weight: 100;\n    text-align: right;\n    align-self: normal;\n  }\n  h2 {\n    font-size: 0.8rem;\n    font-weight: 100;\n  }\n`\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\nimport { Tween } from 'react-gsap'\nimport { ColorProperty } from 'csstype'\n\nimport { StringOrUrlArray } from '../../../../types/StringOrUrlObject'\n\nimport { SkillCardIndicator } from './SkillCardIndicator'\nimport { SkillCardBackdrop } from './SkillCardBackdrop'\nimport { SkillCardBody } from './SkillCardBody'\nimport { SkillCardHeader } from './SkillCardHeader'\nimport { CardFooter } from '../CardFooter'\nimport { CardHeader } from '../CardHeader'\nimport { CardBody } from '../CardBody'\nimport { Flex } from '../../../Flex'\nimport { DynamicImage } from '../../../DynamicImage'\nimport { StyledLink } from '../../../StyledLink'\nimport { Card } from '../Card'\n\ninterface ISkillCardProps {\n  index: number\n  children?: ReactNode\n  level: number\n  title: string\n  description: StringOrUrlArray\n  skillColor: ColorProperty\n  time?: number\n}\n\nconst StyledSkillCard: StyledComponent<typeof Card, any, {}, never> = styled(\n  Card\n)`\n  &:hover {\n    .backdrop {\n      opacity: 0.75 !important;\n    }\n  }\n`\n\nexport function SkillCard({\n  index,\n  title,\n  description,\n  skillColor,\n  time = 0,\n}: ISkillCardProps): JSX.Element {\n  return (\n    <Tween\n      from={{ x: '-400px', opacity: 0 }}\n      duration={1}\n      delay={0.25 + index * 0.125}\n      ease=\"elastic\"\n    >\n      <StyledSkillCard>\n        <SkillCardBackdrop index={index}>\n          <DynamicImage\n            path={`code_icons/${title\n              .replace(/\\([0-9]*\\)|\\s+/gi, '')\n              .toLocaleLowerCase()}.png`}\n          />\n        </SkillCardBackdrop>\n        <CardHeader>\n          <SkillCardHeader>\n            <Flex justifyContent=\"space-between\" direction=\"row\">\n              <SkillCardIndicator\n                instance={index}\n                index={0}\n                litColor={skillColor}\n              ></SkillCardIndicator>\n              <h1>\n                <StyledLink\n                  to={`/tag/${title.toLocaleLowerCase().replace(/\\s+/gi, '_')}`}\n                  color={skillColor}\n                >\n                  {title}\n                </StyledLink>\n              </h1>\n            </Flex>\n          </SkillCardHeader>\n        </CardHeader>\n        <CardBody>\n          <SkillCardBody description={description} index={index} />\n        </CardBody>\n        <CardFooter>\n          <p>\n            (time spent:{' '}\n            <Tween\n              to={{ count: time }}\n              ease=\"none\"\n              duration={Math.sqrt(Math.sqrt(time)) * 0.5}\n            >\n              <span>0</span>\n            </Tween>{' '}\n            hours)\n          </p>\n        </CardFooter>\n      </StyledSkillCard>\n    </Tween>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nexport const LiftedUpWrapper: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  margin: -8rem auto 0;\n\n  @media ${theme.breakpoints.max.smartphone} {\n    margin: 0 auto;\n  }\n`\n","import React from 'react'\n\nimport {\n  ISkillsetAllMarkdownRemark,\n  IProjectsAllMarkdownRemark,\n} from '../types/interfaces'\n\nimport { CardHeader } from '../components/compositions/card/CardHeader'\nimport { CardBody } from '../components/compositions/card/CardBody'\nimport { CardHeaderText } from '../components/compositions/card/CardHeaderText'\nimport { SkillCards } from '../components/compositions/card/skillcard/SkillCards'\nimport { ProjectCards } from '../components/compositions/card/projectcard/ProjectCards'\nimport { LiftedUpWrapper } from '../components/LifedUpWrapper'\nimport { SEO } from '../components/compositions/SEO'\nimport { ContentSeparator } from '../components/ContentSeparator'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport { Grid } from '../components/Grid'\nimport { Card } from '../components/compositions/card/Card'\nimport { CTAButton } from '../components/CTAButton'\n\nexport interface IIndexLayoutProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      author: string\n    }\n  }\n\n  skillsetData: ISkillsetAllMarkdownRemark\n\n  programmingData: IProjectsAllMarkdownRemark\n}\n\nexport function IndexLayout({\n  site,\n  skillsetData,\n  programmingData,\n}: IIndexLayoutProps): JSX.Element {\n  return (\n    <>\n      <SEO title={`Homepage`} description={site.siteMetadata.description} />\n      <LiftedUpWrapper>\n        <ContentSeparator>\n          <CenteredBlock maxWidth={'110rem'}>\n            <Grid columns={3}>\n              <div>\n                <Grid>\n                  <Card>\n                    <CardBody>\n                      <h1>Why I make things</h1>\n                    </CardBody>\n                  </Card>\n                  <Card>\n                    <CardHeader>\n                      <CardHeaderText>\n                        <h1>TL;WR</h1>\n                      </CardHeaderText>\n                    </CardHeader>\n                    <CardBody>\n                      <p>\n                        I find the ability to create something out of nothing\n                        but some text and symbols just absolutely fantastic.\n                      </p>\n                      <p>\n                        I learned about programming at college, where it was\n                        just part of the entire curriculum. During my time\n                        there, I taught myself mostly CSS & HTML, but also a\n                        decent amount of JavaScript. I played with React, Vue,\n                        MeteorJS, CSS preprocessors like Stylus and SASS.\n                      </p>\n                      <p>\n                        Post-college I started experimenting with Back-end\n                        NodeJS, GraphQL, MongoDB and, most importantly,\n                        TypeScript. I also dipped my toes in the Angular\n                        framework and messed with some Svelte. But whatever\n                        framework / library you want to work with honestly\n                        doesn't matter. You can learn to use & master a\n                        framework, yet understanding the underlying language is\n                        what matters most.\n                      </p>\n                    </CardBody>\n                  </Card>\n                  <Card>\n                    <CardBody>\n                      <CTAButton to={'/about'}>Let me tell you...</CTAButton>\n                    </CardBody>\n                  </Card>\n                </Grid>\n              </div>\n              <div>\n                <Grid>\n                  <Card>\n                    <CardBody>\n                      <h1>How I make things</h1>\n                    </CardBody>\n                  </Card>\n                  <SkillCards edges={skillsetData.edges} />\n                  <Card>\n                    <CardBody>\n                      <CTAButton to={'/skillset'}>\n                        What else can I do?\n                      </CTAButton>\n                    </CardBody>\n                  </Card>\n                </Grid>\n              </div>\n              <div>\n                <Grid>\n                  <Card>\n                    <CardBody>\n                      <h1>What I have made</h1>\n                    </CardBody>\n                  </Card>\n                  <ProjectCards edges={programmingData.edges} />\n                  <Card>\n                    <CardBody>\n                      <CTAButton to={'/projects'}>\n                        Read more about my projects\n                      </CTAButton>\n                    </CardBody>\n                  </Card>\n                </Grid>\n              </div>\n            </Grid>\n          </CenteredBlock>\n        </ContentSeparator>\n      </LiftedUpWrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport { IndexLayout, IIndexLayoutProps } from '../layouts/IndexLayout'\n\nfunction IndexPage(): JSX.Element {\n  const data: IIndexLayoutProps =\n    // tslint:disable-next-line: no-void-expression\n    useStaticQuery(graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n\n        skillsetData: allMarkdownRemark(\n          filter: {\n            frontmatter: { path: { regex: \"/tag/\" }, favorite: { eq: true } }\n          }\n          sort: { fields: frontmatter___time, order: DESC }\n          limit: 3\n        ) {\n          edges {\n            node {\n              frontmatter {\n                path\n                title\n                excerpt\n                level\n                skillColor\n                time\n                favorite\n              }\n              excerpt\n            }\n          }\n        }\n\n        programmingData: allMarkdownRemark(\n          filter: {\n            frontmatter: {\n              path: { regex: \"/projects/\" }\n              category: { eq: \"Programming\" }\n              favorite: { eq: true }\n            }\n          }\n          sort: { fields: frontmatter___date, order: DESC }\n          limit: 3\n        ) {\n          ...SharedOPQuery\n        }\n      }\n    `)\n\n  return <IndexLayout {...data} />\n}\n\n// tslint:disable-next-line: no-default-export\nexport default IndexPage\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardBody: StyledComponent<'main', any, {}, never> = styled.main`\n  position: relative;\n  padding: 2em;\n  grid-area: 'body';\n`\n","import styled, {\n  StyledComponent,\n  FlattenSimpleInterpolation,\n  css,\n} from 'styled-components'\n\ninterface ICardFooterProps {\n  style?: boolean\n}\n\nexport const CardFooter: StyledComponent<\n  'footer',\n  any,\n  ICardFooterProps,\n  never\n> = styled.footer`\n  ${({ style = false }: ICardFooterProps): FlattenSimpleInterpolation =>\n    style\n      ? css`\n          background: #eee;\n          padding: 2rem;\n          border-top: 1px solid #ddd;\n          grid-area: footer;\n        `\n      : css`\n          padding: 0 2rem 2rem;\n        `}\n`\n","import { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport { theme } from '../data/theme'\n\ninterface ICTAButtonProps {\n  children: ReactNode\n  to: string\n}\n\nexport const CTAButton: StyledComponent<\n  typeof Link,\n  any,\n  ICTAButtonProps,\n  never\n> = styled(Link)`\n  display: block;\n  background: palevioletred;\n  border: 4px dotted black;\n  font-size: 1.25rem;\n  cursor: pointer;\n  color: white !important;\n  text-transform: uppercase;\n  text-align: center;\n  text-decoration: none;\n  padding: 1.5rem;\n  max-width: 24rem;\n  border: none;\n  border-radius: 999rem;\n  margin: 0 auto;\n\n  &:hover {\n    filter: grayscale(0.5);\n  }\n\n  @media ${theme.breakpoints.max.smartphone} {\n    font-size: 1rem;\n  }\n`\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardHeader: StyledComponent<\n  'header',\n  any,\n  {},\n  never\n> = styled.header`\n  grid-area: 'header';\n`\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardHeaderText: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding: 2em 2em 0 2em;\n\n  & > h6 {\n    margin-bottom: 0;\n  }\n`\n"],"sourceRoot":""}