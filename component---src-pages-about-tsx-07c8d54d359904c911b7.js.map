{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/components/Layout.tsx"],"names":["AboutMe","query","render","data","LayoutMain","styled","main","theme","primary","primaryHover","breakpoints","max","smartphone","StyledLayout","div","background","Layout","children","isLandingPage"],"mappings":"6KAwGeA,UAjBf,WACE,OACE,kBAAC,IAAD,KAEE,kBAAC,cAAD,CACEC,MAnFiB,YAoFjBC,OAAQ,SAACC,GAAD,OAIW,kBAAC,IAAgBA,IANtC,Y,48sGCvFOC,EAAsDC,IAAOC,KAAV,6DAAGD,CAAH,mHAMnDE,IAAMC,QAGJD,IAAME,aAIVF,IAAMG,YAAYC,IAAIC,YCLpBC,EAKTR,IAAOS,IAAV,0EAAGT,CAAH,qCAGeE,IAAMQ,YAGf,SAASC,EAAT,GAGuB,IAF5BC,EAE4B,EAF5BA,SAE4B,IAD5BC,qBAC4B,SAC5B,OACE,kBAACL,EAAD,CAAcK,cAAeA,GAC3B,kBAACd,EAAD,KAAaa","file":"component---src-pages-about-tsx-07c8d54d359904c911b7.js","sourcesContent":["import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\n\nimport { IImageSharpAllFiles } from '../types/interfaces'\n\nimport { Layout } from '../components/Layout'\nimport { AboutLayout } from '../layouts/AboutLayout'\n\n// tslint:disable-next-line: no-void-expression\nconst PAGE_QUERY: void = graphql`\n  fragment ImagesFragment on FileConnection {\n    edges {\n      node {\n        name\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 240, maxHeight: 240, cropFocus: CENTER) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n\n  query {\n    wallpapers: allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n        relativeDirectory: { regex: \"/bio/games/\" }\n      }\n      limit: 14\n    ) {\n      edges {\n        node {\n          name\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 960, maxHeight: 540, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n    squares: allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n        relativeDirectory: { regex: \"/photography/\" }\n      }\n      limit: 9\n    ) {\n      edges {\n        node {\n          name\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 240, maxHeight: 240, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n    posters: allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n        relativeDirectory: { regex: \"/bio/series/\" }\n      }\n      limit: 28\n    ) {\n      edges {\n        node {\n          name\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 270, maxHeight: 480, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nfunction AboutMe(): JSX.Element {\n  return (\n    <Layout>\n      {/* <AboutLayout /> */}\n      <StaticQuery\n        query={PAGE_QUERY}\n        render={(data: {\n          wallpapers: IImageSharpAllFiles\n          squares: IImageSharpAllFiles\n          posters: IImageSharpAllFiles\n        }): JSX.Element => <AboutLayout {...data} />}\n      />\n    </Layout>\n  )\n}\n\n// tslint:disable-next-line: no-default-export\nexport default AboutMe\n","import styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nexport const LayoutMain: StyledComponent<'main', any, {}, never> = styled.main`\n  margin: 0 auto;\n  padding: 4rem 1rem;\n\n  a {\n    text-decoration: none;\n    color: ${theme.primary};\n\n    &:hover {\n      color: ${theme.primaryHover};\n    }\n  }\n\n  @media ${theme.breakpoints.max.smartphone} {\n    padding: 1rem;\n  }\n`\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nimport { LayoutMain } from './LayoutMain'\n\nexport interface ILayoutProps {\n  children?: ReactNode\n  isLandingPage?: boolean\n}\n\nexport const StyledLayout: StyledComponent<\n  'div',\n  any,\n  ILayoutProps,\n  never\n> = styled.div`\n  min-height: 100vh;\n\n  background: ${theme.background};\n`\n\nexport function Layout({\n  children,\n  isLandingPage = false,\n}: ILayoutProps): JSX.Element {\n  return (\n    <StyledLayout isLandingPage={isLandingPage}>\n      <LayoutMain>{children}</LayoutMain>\n    </StyledLayout>\n  )\n}\n"],"sourceRoot":""}