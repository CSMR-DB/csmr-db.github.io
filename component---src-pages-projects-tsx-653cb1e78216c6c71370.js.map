{"version":3,"sources":["webpack:///./src/pages/projects.tsx","webpack:///./src/layouts/ProjectsLayout.tsx"],"names":["ProjectsPage","query","render","programmingData","graphicDesignData","ProjectsLayout","title","description","columns","maxWidth","from","opacity","edges","map","i","node","frontmatter","timeToRead","tags","video","featuredVideo","image","featuredImage","body","excerpt","path","date","key","index"],"mappings":"wmtBAqFeA,UApByB,WACtC,OACE,kBAAC,IAAD,KACE,kBAAC,cAAD,CACEC,MA/DiB,YAgEjBC,OAAQ,gBACNC,EADM,EACNA,gBACAC,EAFM,EAENA,kBAFM,OAIN,kBAAC,IAAD,CACED,gBAAiBA,EACjBC,kBAAmBA,KARzB,Y,kCCpEN,mIAcO,SAASC,EAAT,GAG+B,IAFpCF,EAEoC,EAFpCA,gBACAC,EACoC,EADpCA,kBAEA,OACE,oCACE,kBAAC,IAAD,CAAKE,MAAM,WAAWC,YAAY,kCAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kEACA,+LAMF,kBAAC,IAAD,CACEC,QAAS,uCACTC,SAAU,UAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAM,CAAEC,QAAS,IACrBR,EAAgBS,MAAMC,KACrB,WAEEC,GAFF,QACIC,KAAQC,EADZ,EACYA,YAAaC,EADzB,EACyBA,WADzB,OAIE,kBAAC,IAAD,CACEX,MAAOU,EAAYV,MACnBY,KAAMF,EAAYE,KAClBC,MAAOH,EAAYI,cACnBC,MAAOL,EAAYM,cACnBC,KAAMP,EAAYQ,QAClBP,WAAYA,EACZQ,KAAMT,EAAYS,KAClBC,KAAMV,EAAYU,KAClBC,IAAKb,EACLc,MAAOd,WAQrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0EACA,8VAQF,kBAAC,IAAD,CACEN,QAAS,uCACTC,SAAU,UAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAM,CAAEC,QAAS,IACrBP,EAAkBQ,MAAMC,KACvB,WAEEC,GAFF,QACIC,KAAQC,EADZ,EACYA,YAAaC,EADzB,EACyBA,WADzB,OAIE,kBAAC,IAAD,CACEX,MAAOU,EAAYV,MACnBY,KAAMF,EAAYE,KAClBC,MAAOH,EAAYI,cACnBC,MAAOL,EAAYM,cACnBC,KAAMP,EAAYQ,QAClBP,WAAYA,EACZQ,KAAMT,EAAYS,KAClBC,KAAMV,EAAYU,KAClBC,IAAKb,EACLc,MAAOd","file":"component---src-pages-projects-tsx-653cb1e78216c6c71370.js","sourcesContent":["import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport { Layout } from '../components/Layout'\nimport { ProjectsLayout, IProjectsLayoutProps } from '../layouts/ProjectsLayout'\n\n// tslint:disable-next-line: no-void-expression\nconst PAGE_QUERY: void = graphql`\n  fragment SharedQuery on MarkdownRemarkConnection {\n    edges {\n      node {\n        frontmatter {\n          path\n          category\n          title\n          featuredVideo\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 960) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          excerpt\n          tags\n          date\n        }\n        wordCount {\n          words\n          sentences\n          paragraphs\n        }\n        timeToRead\n        excerpt\n        id\n      }\n    }\n  }\n\n  query {\n    programmingData: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          path: { regex: \"/projects/\" }\n          category: { eq: \"Programming\" }\n        }\n      }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      ...SharedQuery\n    }\n\n    graphicDesignData: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          path: { regex: \"/projects/\" }\n          category: { eq: \"Graphic Design\" }\n        }\n      }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      ...SharedQuery\n    }\n  }\n`\n\nconst ProjectsPage: () => JSX.Element = (): JSX.Element => {\n  return (\n    <Layout>\n      <StaticQuery\n        query={PAGE_QUERY}\n        render={({\n          programmingData,\n          graphicDesignData,\n        }: IProjectsLayoutProps): JSX.Element => (\n          <ProjectsLayout\n            programmingData={programmingData}\n            graphicDesignData={graphicDesignData}\n          />\n        )}\n      />\n    </Layout>\n  )\n}\n\n// tslint:disable-next-line: no-default-export\nexport default ProjectsPage\n","import React from 'react'\nimport { Grid } from '../components/Grid'\nimport { IEdge, IProjectsAllMarkdownRemark } from '../templates/interfaces'\nimport { ProjectCard } from '../components/ProjectCard'\nimport { SEO } from '../components/SEO'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport { ContentSeparator } from '../components/ContentSeparator'\nimport { Reveal, Tween } from 'react-gsap'\n\nexport interface IProjectsLayoutProps {\n  programmingData: IProjectsAllMarkdownRemark\n  graphicDesignData: IProjectsAllMarkdownRemark\n}\n\nexport function ProjectsLayout({\n  programmingData,\n  graphicDesignData,\n}: IProjectsLayoutProps): JSX.Element {\n  return (\n    <>\n      <SEO title=\"Projects\" description=\"These are some projects I did\" />\n      <ContentSeparator>\n        <CenteredBlock>\n          <h1>Hey! These are some of my projects</h1>\n          <p>\n            In chronological order, from newest to oldest. These are some\n            projects I worked on that I am proud of, that taught me a lot and /\n            or got me some decent grades.\n          </p>\n        </CenteredBlock>\n        <Grid\n          columns={'repeat(auto-fill, minmax(32rem,1fr))'}\n          maxWidth={'100rem'}\n        >\n          <Reveal>\n            <Tween from={{ opacity: 0 }}>\n              {programmingData.edges.map(\n                (\n                  { node: { frontmatter, timeToRead } }: IEdge,\n                  i: number\n                ): JSX.Element => (\n                  <ProjectCard\n                    title={frontmatter.title}\n                    tags={frontmatter.tags}\n                    video={frontmatter.featuredVideo}\n                    image={frontmatter.featuredImage}\n                    body={frontmatter.excerpt}\n                    timeToRead={timeToRead}\n                    path={frontmatter.path}\n                    date={frontmatter.date}\n                    key={i}\n                    index={i}\n                  />\n                )\n              )}\n            </Tween>\n          </Reveal>\n        </Grid>\n      </ContentSeparator>\n      <ContentSeparator>\n        <CenteredBlock>\n          <h1>I have also done some Graphic Design stuff</h1>\n          <p>\n            Not everything in here has to do with programming. I also included\n            some projects I made using Adobe Illustrator and After Effects. The\n            first projects were part of courses in a timeframe of about 10\n            weeks. That meant going from 0 - 100 in roughly 10 weeks, allocating\n            time for other courses as well (about 4 at a time).\n          </p>\n        </CenteredBlock>\n        <Grid\n          columns={'repeat(auto-fill, minmax(32rem,1fr))'}\n          maxWidth={'100rem'}\n        >\n          <Reveal>\n            <Tween from={{ opacity: 0 }}>\n              {graphicDesignData.edges.map(\n                (\n                  { node: { frontmatter, timeToRead } }: IEdge,\n                  i: number\n                ): JSX.Element => (\n                  <ProjectCard\n                    title={frontmatter.title}\n                    tags={frontmatter.tags}\n                    video={frontmatter.featuredVideo}\n                    image={frontmatter.featuredImage}\n                    body={frontmatter.excerpt}\n                    timeToRead={timeToRead}\n                    path={frontmatter.path}\n                    date={frontmatter.date}\n                    key={i}\n                    index={i}\n                  />\n                )\n              )}\n            </Tween>\n          </Reveal>\n        </Grid>\n      </ContentSeparator>\n    </>\n  )\n}\n"],"sourceRoot":""}