{"version":3,"sources":["webpack:///./src/templates/ProjectTemplate.tsx"],"names":["FullPageH1","styled","h1","ProjectTemplate","markdownRemark","data","frontmatter","html","timeToRead","featuredImage","featuredVideo","tags","video","image","maxHeight","title","dateString","date","excerpt","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"4FAAA,sMAeMA,EAAoDC,IAAOC,GAAV,kFAAGD,CAAH,sBAKxC,SAASE,EAAT,GAEkB,IACvBC,EADuB,EAD/BC,KAEQD,eACAE,EAAmDF,EAAnDE,YAAaC,EAAsCH,EAAtCG,KAAMC,EAAgCJ,EAAhCI,WAEzBC,EAGwBH,EAHxBG,cACAC,EAEwBJ,EAFxBI,cACAC,EACwBL,EADxBK,KAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,iCACE,gCACE,kBAAC,IAAD,CACEC,MAAOF,EACPG,MAAOJ,EACPK,UAAU,SAEZ,kBAACd,EAAD,KAAaM,EAAYS,OACzB,4BACE,kBAAC,IAAD,CAAeC,WAAYV,EAAYW,OADzC,KACoD,IAClD,kBAAC,IAAD,CAAaT,WAAYA,MAG7B,2BAAIF,EAAYY,SAChB,0BAAMC,wBAAyB,CAAEC,OAAQb,KACzC,gCACE,kBAAC,IAAD,CAAaI,KAAMA,QASxB,IAAMU,EAAkB","file":"component---src-templates-project-template-tsx-89e6175762b4701361d4.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout } from '../components/Layout'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport {\n  ISingleItemData,\n  IMarkdownRemark,\n  IExtendedFrontmatter,\n} from './interfaces'\nimport { ArticleTags } from '../components/ArticleTags'\nimport { CardHeaderImageOrVideo } from '../components/CardHeaderImageOrVideo'\nimport { DateFormatted } from '../components/DateFormatted'\nimport styled, { StyledComponent } from 'styled-components'\nimport { ReadingTime } from '../components/ReadingTime'\n\nconst FullPageH1: StyledComponent<'h1', any, {}, never> = styled.h1`\n  margin-top: 4rem;\n`\n\n// tslint:disable-next-line: no-default-export\nexport default function ProjectTemplate({\n  data, // this prop will be injected by the GraphQL query below.\n}: ISingleItemData): JSX.Element {\n  const { markdownRemark }: ISingleItemData['data'] = data // data.markdownRemark holds our post data\n  const { frontmatter, html, timeToRead }: IMarkdownRemark = markdownRemark\n  const {\n    featuredImage,\n    featuredVideo,\n    tags,\n  }: IExtendedFrontmatter = frontmatter\n\n  return (\n    <Layout>\n      <CenteredBlock>\n        <article>\n          <header>\n            <CardHeaderImageOrVideo\n              video={featuredVideo}\n              image={featuredImage}\n              maxHeight=\"auto\"\n            />\n            <FullPageH1>{frontmatter.title}</FullPageH1>\n            <h6>\n              <DateFormatted dateString={frontmatter.date} /> Â·{' '}\n              <ReadingTime timeToRead={timeToRead} />\n            </h6>\n          </header>\n          <p>{frontmatter.excerpt}</p>\n          <main dangerouslySetInnerHTML={{ __html: html }} />\n          <footer>\n            <ArticleTags tags={tags} />\n          </footer>\n        </article>\n      </CenteredBlock>\n    </Layout>\n  )\n}\n\n// tslint:disable-next-line: no-void-expression\nexport const pageQuery: void = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        category\n        path\n        title\n        tags\n        excerpt\n        featuredVideo\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 960) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      timeToRead\n    }\n  }\n`\n"],"sourceRoot":""}