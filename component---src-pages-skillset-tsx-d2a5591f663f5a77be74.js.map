{"version":3,"sources":["webpack:///./src/layouts/SkillSetLayout.tsx","webpack:///./src/pages/skillset.tsx"],"names":["SkillsetLayout","skillsetData","experienceData","title","description","columns","maxWidth","edges","map","i","frontmatter","node","level","excerpt","time","key","index","skillColor","name","type","icon","dateStart","dateEnd","backgroundColor","toLocaleLowerCase","SkillsetPage","query","render"],"mappings":"4jKAAA,mIAmBO,SAASA,EAAT,GAG+B,IAFpCC,EAEoC,EAFpCA,aACAC,EACoC,EADpCA,eAEA,OACE,oCACE,kBAAC,IAAD,CACEC,MAAM,WACNC,YAAY,sGAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+DACA,2GAMJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,QAAQ,wCAAwCC,SAAS,UAC5DL,EAAaM,MAAMC,KAClB,WAEEC,GAFF,IACYC,EADZ,EACIC,KAAQD,YADZ,OAIE,kBAAC,IAAD,CACEE,MAAOF,EAAYE,OAAS,EAC5BT,MAAOO,EAAYP,MACnBC,YAAaM,EAAYG,QACzBC,KAAMJ,EAAYI,KAClBC,IAAKN,EACLO,MAAOP,EACPQ,WAAYP,EAAYO,kBAMlC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yCACA,kBAAC,IAAD,CACEC,KAAK,gCACLC,KAAK,MACLC,KAAK,oBACLC,UAAU,aACVC,QAAQ,aACRlB,YAAY,2RACZmB,gBAAgB,UAChBP,MAAO,KAGX,kBAAC,IAAD,KACE,uDACA,kBAAC,IAAD,KACGd,EAAeK,MAAMC,KACpB,WAEEC,GAFF,IACYC,EADZ,EACIC,KAAQD,YADZ,OAIE,kBAAC,IAAD,CACEQ,KAAMR,EAAYP,MAClBgB,KAAMT,EAAYS,KAClBf,YAAaM,EAAYG,QACzBO,KAAI,SAAWV,EAAYP,MAAMqB,oBAA7B,YACJD,gBAAiBb,EAAYa,gBAC7BF,UAAWX,EAAYW,UACvBC,QAASZ,EAAYY,QACrBP,IAAKN,EACLO,MAAOP,a,kHCvBVgB,UAlByB,kBACtC,kBAAC,IAAD,KACE,kBAAC,cAAD,CACEC,MA7CmB,aA8CnBC,OAAQ,gBACNzB,EADM,EACNA,eACAD,EAFM,EAENA,aAFM,OAIN,kBAAC,IAAD,CACEA,aAAcA,EACdC,eAAgBA,KARtB","file":"component---src-pages-skillset-tsx-d2a5591f663f5a77be74.js","sourcesContent":["import React from 'react'\nimport { SEO } from '../components/SEO'\nimport { SkillCard } from '../components/SkillCard'\nimport { ExperienceCard } from '../components/ExperienceCard'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport { Grid } from '../components/Grid'\nimport {\n  IExperienceAllMarkdownRemark,\n  IExperienceEdge,\n  ISkillsetAllMarkdownRemark,\n  ISkillsetEdge,\n} from '../templates/interfaces'\nimport { ContentSeparator } from '../components/ContentSeparator'\n\nexport interface ISkillsetLayoutProps {\n  skillsetData: ISkillsetAllMarkdownRemark\n  experienceData: IExperienceAllMarkdownRemark\n}\n\nexport function SkillsetLayout({\n  skillsetData,\n  experienceData,\n}: ISkillsetLayoutProps): JSX.Element {\n  return (\n    <>\n      <SEO\n        title=\"Skillset\"\n        description=\"This is my trying to provide you with an indication about my capabilities & goals looking forward\"\n      />\n      <CenteredBlock>\n        <ContentSeparator>\n          <h1>This is what I have worked with</h1>\n          <p>\n            A rough estimation of the total time I've spent on everything is\n            included.\n          </p>\n        </ContentSeparator>\n      </CenteredBlock>\n      <ContentSeparator>\n        <Grid columns=\"repeat(auto-fill, minmax(25rem, 1fr))\" maxWidth=\"160rem\">\n          {skillsetData.edges.map(\n            (\n              { node: { frontmatter } }: ISkillsetEdge,\n              i: number\n            ): JSX.Element => (\n              <SkillCard\n                level={frontmatter.level || 0}\n                title={frontmatter.title}\n                description={frontmatter.excerpt}\n                time={frontmatter.time}\n                key={i}\n                index={i}\n                skillColor={frontmatter.skillColor}\n              />\n            )\n          )}\n        </Grid>\n      </ContentSeparator>\n      <CenteredBlock>\n        <ContentSeparator>\n          <h1>Education</h1>\n          <ExperienceCard\n            name=\"Digital Media & Communication\"\n            type=\"HBO\"\n            icon=\"icons/hu_logo.jpg\"\n            dateStart=\"2015-09-05\"\n            dateEnd=\"2019-02-04\"\n            description=\"This is where my interest in programming started, as well as my first steps into graphic design. I learned about marketing and doing user research. Halfway through my final year I decided to drop out due to lack of motivation as I wanted to pursue learning more about programming.\"\n            backgroundColor=\"#298CCD\"\n            index={0}\n          />\n        </ContentSeparator>\n        <ContentSeparator>\n          <h1>Professional experience</h1>\n          <Grid>\n            {experienceData.edges.map(\n              (\n                { node: { frontmatter } }: IExperienceEdge,\n                i: number\n              ): JSX.Element => (\n                <ExperienceCard\n                  name={frontmatter.title}\n                  type={frontmatter.type}\n                  description={frontmatter.excerpt}\n                  icon={`icons/${frontmatter.title.toLocaleLowerCase()}_logo.png`}\n                  backgroundColor={frontmatter.backgroundColor}\n                  dateStart={frontmatter.dateStart}\n                  dateEnd={frontmatter.dateEnd}\n                  key={i}\n                  index={i}\n                />\n              )\n            )}\n          </Grid>\n        </ContentSeparator>\n      </CenteredBlock>\n    </>\n  )\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Layout } from '../components/Layout'\nimport { SkillsetLayout, ISkillsetLayoutProps } from '../layouts/SkillSetLayout'\n\n// tslint:disable-next-line: no-void-expression\nconst PAGE_QUERY: void = graphql`\n  query {\n    experienceData: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/experiences/\" } } }\n      sort: { fields: frontmatter___dateEnd }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            excerpt\n            dateStart\n            dateEnd\n            backgroundColor\n            type\n          }\n          excerpt\n        }\n      }\n    }\n    skillsetData: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/tag/\" } } }\n      sort: { fields: frontmatter___time, order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            excerpt\n            level\n            skillColor\n            time\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nconst SkillsetPage: () => JSX.Element = (): JSX.Element => (\n  <Layout>\n    <StaticQuery\n      query={PAGE_QUERY}\n      render={({\n        experienceData,\n        skillsetData,\n      }: ISkillsetLayoutProps): JSX.Element => (\n        <SkillsetLayout\n          skillsetData={skillsetData}\n          experienceData={experienceData}\n        />\n      )}\n    />\n  </Layout>\n)\n\n// tslint:disable-next-line: no-default-export\nexport default SkillsetPage\n"],"sourceRoot":""}