{"version":3,"sources":["webpack:///./src/components/FullPageH1.tsx","webpack:///./src/templates/ArticleTemplate.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/components/Layout.tsx"],"names":["FullPageH1","styled","h1","ArticleTemplate","data","markdownRemark","frontmatter","featuredImage","featuredVideo","tags","date","title","excerpt","html","timeToRead","Layout","CenteredBlock","CardHeaderImageOrVideo","video","image","maxHeight","DateFormatted","dateString","ReadingTime","dangerouslySetInnerHTML","__html","ArticleTags","pageQuery","LayoutMain","main","theme","primary","primaryHover","breakpoints","max","smartphone","StyledLayout","div","background","children","isLandingPage"],"mappings":"sRAEaA,E,UAAoDC,EAAOC,GAAV,iEAAGD,CAAH,sBCY/C,SAASE,EAAT,GAQuC,QAPpDC,KACEC,eAMkD,IALhDC,YAAeC,EAKiC,EALjCA,cAAeC,EAKkB,EALlBA,cAAeC,EAKG,EALHA,KAAMC,EAKH,EALGA,KAAMC,EAKT,EALSA,MAAOC,EAKhB,EALgBA,QAChEC,EAIgD,EAJhDA,KACAC,EAGgD,EAHhDA,WAIJ,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,iCACE,gCACE,kBAACC,EAAA,EAAD,CACEC,MAAOV,EACPW,MAAOZ,EACPa,UAAU,SAEZ,kBAACpB,EAAD,KAAaW,GACb,4BACE,kBAACU,EAAA,EAAD,CAAeC,WAAYZ,IAD7B,KACwC,IACtC,kBAACa,EAAA,EAAD,CAAaT,WAAYA,MAG7B,2BAAIF,GACJ,0BAAMY,wBAAyB,CAAEC,OAAQZ,KACzC,gCACE,kBAACa,EAAA,EAAD,CAAajB,KAAMA,QASxB,IAAMkB,EAAkB,Y,qHC/ClBC,EAAsD3B,IAAO4B,KAAV,6DAAG5B,CAAH,mHAMnD6B,IAAMC,QAGJD,IAAME,aAIVF,IAAMG,YAAYC,IAAIC,YCLpBC,EAKTnC,IAAOoC,IAAV,0EAAGpC,CAAH,qCAGe6B,IAAMQ,YAGf,SAASvB,EAAT,GAGuB,IAF5BwB,EAE4B,EAF5BA,SAE4B,IAD5BC,qBAC4B,SAC5B,OACE,kBAACJ,EAAD,CAAcI,cAAeA,GAC3B,kBAACZ,EAAD,KAAaW","file":"component---src-templates-article-template-tsx-133889279006936a188e.js","sourcesContent":["import styled, { StyledComponent } from 'styled-components'\n\nexport const FullPageH1: StyledComponent<'h1', any, {}, never> = styled.h1`\n  margin-top: 4rem;\n`\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { ISingleItemData, IProjectFrontmatter } from '../types/interfaces'\n\nimport { Layout } from '../components/Layout'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport { ArticleTags } from '../components/ArticleTags'\nimport { CardHeaderImageOrVideo } from '../components/compositions/card/CardHeaderImageOrVideo'\nimport { DateFormatted } from '../components/DateFormatted'\nimport { ReadingTime } from '../components/ReadingTime'\nimport { FullPageH1 } from '../components/FullPageH1'\n\n// tslint:disable-next-line: no-default-export\nexport default function ArticleTemplate({\n  data: {\n    markdownRemark: {\n      frontmatter: { featuredImage, featuredVideo, tags, date, title, excerpt },\n      html,\n      timeToRead,\n    },\n  }, // this prop will be injected by the GraphQL query below.\n}: ISingleItemData<IProjectFrontmatter>): JSX.Element {\n  return (\n    <Layout>\n      <CenteredBlock>\n        <article>\n          <header>\n            <CardHeaderImageOrVideo\n              video={featuredVideo}\n              image={featuredImage}\n              maxHeight=\"auto\"\n            />\n            <FullPageH1>{title}</FullPageH1>\n            <h6>\n              <DateFormatted dateString={date} /> Â·{' '}\n              <ReadingTime timeToRead={timeToRead} />\n            </h6>\n          </header>\n          <p>{excerpt}</p>\n          <main dangerouslySetInnerHTML={{ __html: html }} />\n          <footer>\n            <ArticleTags tags={tags} />\n          </footer>\n        </article>\n      </CenteredBlock>\n    </Layout>\n  )\n}\n\n// tslint:disable-next-line: no-void-expression\nexport const pageQuery: void = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        category\n        path\n        title\n        tags\n        excerpt\n        featuredVideo\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 960) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      timeToRead\n    }\n  }\n`\n","import styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nexport const LayoutMain: StyledComponent<'main', any, {}, never> = styled.main`\n  margin: 0 auto;\n  padding: 4rem 1rem;\n\n  a {\n    text-decoration: none;\n    color: ${theme.primary};\n\n    &:hover {\n      color: ${theme.primaryHover};\n    }\n  }\n\n  @media ${theme.breakpoints.max.smartphone} {\n    padding: 1rem;\n  }\n`\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nimport { LayoutMain } from './LayoutMain'\n\nexport interface ILayoutProps {\n  children?: ReactNode\n  isLandingPage?: boolean\n}\n\nexport const StyledLayout: StyledComponent<\n  'div',\n  any,\n  ILayoutProps,\n  never\n> = styled.div`\n  min-height: 100vh;\n\n  background: ${theme.background};\n`\n\nexport function Layout({\n  children,\n  isLandingPage = false,\n}: ILayoutProps): JSX.Element {\n  return (\n    <StyledLayout isLandingPage={isLandingPage}>\n      <LayoutMain>{children}</LayoutMain>\n    </StyledLayout>\n  )\n}\n"],"sourceRoot":""}