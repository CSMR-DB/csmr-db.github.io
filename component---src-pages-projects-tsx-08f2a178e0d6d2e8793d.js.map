{"version":3,"sources":["webpack:///./src/components/StyledIFrame.tsx","webpack:///./src/data/projects.ts","webpack:///./src/pages/projects.tsx","webpack:///./src/components/Card.tsx"],"names":["StyledIFrame","styled","iframe","projects","title","image","body","url","text","tags","video","StyledProjectCard","Card","ProjectCard","path","width","height","src","frameborder","allow","allowfullscreen","Array","isArray","map","string","i","href","target","key","tag","Projects","description","CenteredBlock","maxWidth","columns","article","CardHeader","header","CardHeaderText","div","CardHeaderIconWrapper","props","backgroundColor","CardBody","main","CardFooter","footer"],"mappings":"uJAQaA,EAKTC,IAAOC,OAAV,mEAAGD,CAAH,qD,oCCJYE,EAAuB,CAClC,CACEC,MAAO,wBACPC,MAAO,4BACPC,KAAM,CAAC,ubAOL,CAAEC,IAAK,8BAA+BC,KAAM,UAC5C,KAEFC,KAAM,CAAC,OAAQ,QAEjB,CACEL,MAAO,cACPC,MAAO,gCACPC,KAAM,CAAC,k6BAaL,CACEC,IAAK,yCACLC,KAAM,oBAER,KAEFC,KAAM,CAAC,OAAQ,MAAO,eAExB,CACEL,MAAO,OACPM,MAAO,4CACPJ,KAAM,CAAC,ijBASPG,KAAM,CAAC,gBAAiB,WAAY,gBAEtC,CACEL,MAAO,kBACPC,MAAO,8BACPC,KAAM,CAAC,oXAQPG,KAAM,CAAC,OAAQ,MAAO,aAAc,QAEtC,CACEL,MAAO,mBACPC,MAAO,yBACPC,KAAM,CAAC,uTAML,CACEC,IAAK,wDACLC,KAAM,uBARJ,kJAaNC,KAAM,CAAC,gBAET,CACEL,MAAO,qBACPM,MAAO,4CACPJ,KAAM,CAAC,ggCAiBPG,KAAM,CAAC,gBAAiB,gBAE1B,CACEL,MAAO,WACPC,MAAO,wBACPC,KAAM,CAAC,0iBAUL,CACEC,IAAK,sCACLC,KAAM,uBAZJ,KAgBNC,KAAM,CAAC,aAAc,aCjHnBE,EAAgEV,YACpEW,KADiE,8EAAGX,CAAH,kHAY7DY,EAMiC,SAAC,GAAD,IACrCR,EADqC,EACrCA,MACAK,EAFqC,EAErCA,MACAN,EAHqC,EAGrCA,MACAE,EAJqC,EAIrCA,KACAG,EALqC,EAKrCA,KALqC,OAOrC,kBAACE,EAAD,KACE,kBAACC,EAAA,EAAD,KACGP,GAAS,kBAAC,IAAD,CAAcS,KAAMT,IAC7BK,GACC,kBAACV,EAAD,CACEe,MAAM,MACNC,OAAO,MACPC,IAAKP,EACLQ,YAAY,IACZC,MAAM,0EACNC,iBAAe,KAIrB,kBAACR,EAAA,EAAD,KACE,4BAAKR,GACL,2BACGiB,MAAMC,QAAQhB,GACXA,EAAKiB,KAAI,SAACC,EAA2BC,GACnC,MAAsB,iBAAXD,GAAuBA,EAAOjB,IAErC,kBAAC,IAAD,CAASmB,KAAMF,EAAOjB,IAAKoB,OAAO,QAAQC,IAAKH,GAC5CD,EAAOhB,MAKPgB,KAETlB,IAGR,kBAACM,EAAA,EAAD,KACE,mCACQ,IACLH,GACCA,EAAKc,KAAI,SAACM,EAAaJ,GAAd,OAA4B,0BAAMG,IAAKH,GAAII,UAuC/CC,UAjCqB,kBAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1B,MAAM,WAAW2B,YAAY,kCAClC,kBAACC,EAAA,EAAD,KACE,kEACA,idAUF,kBAAC,IAAD,CAAMC,SAAS,SAASC,QAAQ,yCAC7B/B,EAASoB,KACR,WAAgDE,GAAhD,IAAGrB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOK,EAAjB,EAAiBA,MAAOJ,EAAxB,EAAwBA,KAAMG,EAA9B,EAA8BA,KAA9B,OACE,kBAAC,EAAD,CACEL,MAAOA,EACPC,MAAOA,EACPK,MAAOA,EACPJ,KAAMA,EACNG,KAAMA,EACNmB,IAAKH,W,iCCjHjB,uNAIab,EAAmDX,IAAOkC,QAAV,2DAAGlC,CAAH,olBAyChDmC,EAKTnC,IAAOoC,OAAV,uEAAGpC,CAAH,4EAOYqC,EAKTrC,IAAOsC,IAAV,2EAAGtC,CAAH,uBAQYuC,EAKTvC,IAAOsC,IAAV,kFAAGtC,CAAH,2HAOe,SAACwC,GAAD,OACZA,EAAMC,iBAAmB,UAIhBC,EAAoD1C,IAAO2C,KAAV,qEAAG3C,CAAH,qDAMjD4C,EAKT5C,IAAO6C,OAAV,uEAAG7C,CAAH","file":"component---src-pages-projects-tsx-08f2a178e0d6d2e8793d.js","sourcesContent":["import styled, { StyledComponent } from 'styled-components'\n\ninterface IStyledIFrameProps {\n  frameborder: string\n  allow: string\n  allowfullscreen: boolean\n}\n\nexport const StyledIFrame: StyledComponent<\n  'iframe',\n  any,\n  IStyledIFrameProps,\n  never\n> = styled.iframe`\n  max-width: 100%;\n  border: none;\n  width: 100%;\n  margin: 0;\n`\n","export interface IProject {\n  image?: string\n  video?: string\n  title: string\n  body: (string | { url: string; text: string })[]\n  tags?: string[]\n}\n;[]\n\nexport const projects: IProject[] = [\n  {\n    title: 'Modern Family Fansite',\n    image: 'projects/modernfamily.png',\n    body: [\n      `One of the first projects in year one that got me excited about\n      webdevelopment. This project is just purely HTML5 + CSS3. Nothing too\n      fancy, just the base necessities. The only thing that doesn't work is\n      the actor pages. They don't exist due to deadlines at that time. Also,\n      there are no links to the show's social pages. It was just a prototype\n      to show off HTML & CSS. This project can also be found `,\n      { url: 'http://modernfamily.csmr.nl', text: 'online' },\n      '.',\n    ],\n    tags: ['HTML', 'CSS'],\n  },\n  {\n    title: 'Cloudcademy',\n    image: 'projects/cloudcademy_code.png',\n    body: [\n      `Cloudcademy was the big course assignment we were to work on to get\n            a final grade. We were just told to make \"a social media platform\"\n            for any subject we wanted. The subject itself didn't matter, as the\n            goal was to learn JavaScript. In this project I chose to focus on\n            jQuery, as it enabled me to get going faster. I made a login system\n            (requirement), a post submission form with a dynamic display of\n            images & videos and stored everything temporarily using the\n            LocalStorage API to allow users to refresh a page and still preserve\n            all the posts that had already been added. This was mainly done by\n            concatenating strings of HTML, as shown in the image. For some\n            reason the project doesn't run 100% properly anymore, so no live\n            demo is available. The source code can still be found in `,\n      {\n        url: 'https://github.com/CSMR-DB/Cloudcademy',\n        text: 'this GitHub repo',\n      },\n      '.',\n    ],\n    tags: ['HTML', 'CSS', 'JavaScript'],\n  },\n  {\n    title: 'FOMO',\n    video: 'https://www.youtube.com/embed/ZbANrSn5ZB0',\n    body: [\n      `In year one we got introduced to After Effects and I instantly fell in\n          love. Soon enough, I found I needed more of a challenge. I wanted to do\n          something in 3D. Through After Effects I found out about Cinema4D, and\n          boy was it fun. I made the scenery in 3D and played around with lighting\n          and camera tracks. The character in the video was animated in 2D, to\n          give something of an \"odd\" feeling when watching it. I liked the style\n          of side-scrolling games, and wanted to try to mimic that effect.`,\n    ],\n    tags: ['After Effects', 'Cinema4D', 'Illustrator'],\n  },\n  {\n    title: 'Wordpress Theme',\n    image: 'projects/wpthemeexample.png',\n    body: [\n      `At the end of year 1 there was this group project for a local\n    students' guild centered around iceskating. I took the\n    responsibility for the Wordpress website design upon me, learning a\n    bit about the PHP used by Wordpress to develop a theme that fully\n    utilized the Customizer API. Unfortunately, we weren't chosen to\n    publish our design concept.`,\n    ],\n    tags: ['HTML', 'CSS', 'JavaScript', 'PHP'],\n  },\n  {\n    title: 'Abstract Dataviz',\n    image: 'projects/dataroute.png',\n    body: [\n      `During my year 4 minor we had one major assignment: Take any form of\n    data you can find on your route from home to college. I chose mobile\n    network speed, took 20 points of measure, fiddled up some concepts\n    and eventually landed on this very abstract piece. Inspired by the\n    typically Dutch `,\n      {\n        url: 'https://nl.wikipedia.org/wiki/Paddenstoel_(wegwijzer)',\n        text: '\"route paddenstoel\"',\n      },\n      ` and an ordinary colorful mushroom, flattened as if you were viewing\n    it top-down with the data displayed on it in the LTR writing system.`,\n    ],\n    tags: ['Illustrator'],\n  },\n  {\n    title: 'Video Project VUMC',\n    video: 'https://www.youtube.com/embed/OYVxTuwnx-c',\n    body: [\n      `At the end of the year 4 minor there was this big assignment: make a\n    datavisualization for a client according to their needs &\n    requirements. The entire group of students was split up in smaller\n    teams of 3, each working for a different client with different\n    requirements. Our objective: make an animated short, telling the\n    story about our research and findings. One that we could use in\n    schools and one that is interesting for both students and teachers.\n    Make sure to get our message \"we need to come together to find a\n    solution\" across. We created concepts, sketches and discussed ideas\n    about doing a voice-over. We made a version using a voice-over, but\n    were asked to make a version with subtitles instead. I took it upon\n    myself to create the entire animation in After Effects and find a\n    suiting (& free) piece of background music. The end result: a\n    composition with consistency at the center, and smooth transitions\n    to highlight important sections.`,\n    ],\n    tags: ['After Effects', 'Illustrator'],\n  },\n  {\n    title: 'PHYX API',\n    image: 'projects/phyx_api.png',\n    body: [\n      `This is my first major project stepping out of front-end\n    development. Everything I have made up until this point has\n    focussed, in some way, on visual design. The only visual aspect of\n    this project is the GraphiQL portal that's made available to\n    communicate with the server. The stack consists of Apollo Server\n    (GraphQL), TypeScript and a Dependency Injection Container. This is\n    a project for me to experiment with architecture, TDD & SOLID\n    principles. I still have a lot to learn. Full code for this project\n    is `,\n      {\n        url: 'https://github.com/CSMR-DB/phyx-api',\n        text: 'available on GitHub',\n      },\n      `.`,\n    ],\n    tags: ['TypeScript', 'GraphQL'],\n  },\n]\n","import React from 'react'\n\nimport { Layout } from '../components/layout'\nimport { SEO } from '../components/seo'\nimport { DynamicImage } from '../components/dynamicimage'\nimport { StyledIFrame } from '../components/StyledIFrame'\nimport { StyledA } from '../components/StyledLink'\nimport { Card, CardHeader, CardBody, CardFooter } from '../components/Card'\nimport { Grid } from '../components/grid'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport { projects, IProject } from '../data/projects'\nimport styled, { StyledComponent } from 'styled-components'\nimport { StringOrUrlObject, StringOrUrlArray } from '../types/StringOrUrlObject'\n\ninterface IProfileCardProps {\n  image?: string\n  video?: string\n  title: string\n  body: StringOrUrlArray\n  tags?: string[]\n}\n\nconst StyledProjectCard: StyledComponent<'article', any, {}, never> = styled(\n  Card\n)`\n  & header > :first-child {\n    transition: all 0.25s ease-in-out;\n  }\n\n  &:hover header > :first-child {\n    transform: scale(1.1);\n  }\n`\n\nconst ProjectCard: ({\n  image,\n  video,\n  title,\n  body,\n  tags,\n}: IProfileCardProps) => JSX.Element = ({\n  image,\n  video,\n  title,\n  body,\n  tags,\n}: IProfileCardProps): JSX.Element => (\n  <StyledProjectCard>\n    <CardHeader>\n      {image && <DynamicImage path={image} />}\n      {video && (\n        <StyledIFrame\n          width=\"960\"\n          height=\"340\"\n          src={video}\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        ></StyledIFrame>\n      )}\n    </CardHeader>\n    <CardBody>\n      <h2>{title}</h2>\n      <p>\n        {Array.isArray(body)\n          ? body.map((string: StringOrUrlObject, i: number) => {\n              if (typeof string !== 'string' && string.url) {\n                return (\n                  <StyledA href={string.url} target=\"blank\" key={i}>\n                    {string.text}\n                  </StyledA>\n                )\n              }\n\n              return string\n            })\n          : body}\n      </p>\n    </CardBody>\n    <CardFooter>\n      <p>\n        Tags:{' '}\n        {tags &&\n          tags.map((tag: string, i: number) => <span key={i}>{tag}</span>)}\n      </p>\n    </CardFooter>\n  </StyledProjectCard>\n)\n\nconst Projects: () => JSX.Element = (): JSX.Element => (\n  <Layout>\n    <SEO title=\"Projects\" description=\"These are some projects I did\" />\n    <CenteredBlock>\n      <h1>Hey! These are some of my projects</h1>\n      <p>\n        In chronological order. These are some projects I worked on that I am\n        proud of and / or got me some decent grades. Not everything in here has\n        to do with programming. I also included some projects I made using Adobe\n        Illustrator and After Effects. The first projects were part of courses\n        in a timeframe of about 10 weeks. That meant going from 0 - 100 in\n        roughly 10 weeks, allocating time for other courses as well (about 4 at\n        a time).\n      </p>\n    </CenteredBlock>\n    <Grid maxWidth=\"100rem\" columns=\"repeat(auto-fill, minmax(32rem, 1fr))\">\n      {projects.map(\n        ({ title, image, video, body, tags }: IProject, i: number) => (\n          <ProjectCard\n            title={title}\n            image={image}\n            video={video}\n            body={body}\n            tags={tags}\n            key={i}\n          />\n        )\n      )}\n    </Grid>\n  </Layout>\n)\n\n// tslint:disable-next-line: no-default-export\nexport default Projects\n","import styled, { StyledComponent } from 'styled-components'\n// tslint:disable-next-line: no-implicit-dependencies\nimport { BackgroundColorProperty } from 'csstype'\n\nexport const Card: StyledComponent<'article', any, {}, never> = styled.article`\n  position: relative;\n  border-radius: 0.25rem;\n  display: grid;\n  grid-template-areas: 'header' 'body' 'footer';\n  grid-template-rows: auto 1fr auto;\n  overflow: hidden;\n  background: white;\n  box-shadow: 0 0.075rem 0.075rem rgba(0, 0, 0, 0.1),\n    0 0.125rem 0.125rem rgba(0, 0, 0, 0.25);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n  &:hover {\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.25),\n      0 0.25rem 0.25rem rgba(0, 0, 0, 0.2);\n    transform: translateY(-0.25rem);\n  }\n\n  & h1 {\n    font-size: 1.5em;\n    margin: 0;\n  }\n\n  & h2 {\n    font-size: 1.1em;\n    font-style: italic;\n    margin: 0;\n    color: #aaa;\n    margin-bottom: 1rem;\n  }\n\n  & p {\n    margin: 0;\n    text-align: justify;\n  }\n\n  & header {\n    margin-bottom: 2em;\n  }\n`\n\nexport const CardHeader: StyledComponent<\n  'header',\n  any,\n  {},\n  never\n> = styled.header`\n  margin-bottom: 2em;\n  max-height: 18rem;\n  overflow: hidden;\n  grid-area: 'header';\n`\n\nexport const CardHeaderText: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding-left: 2em;\n`\n\ninterface ICardHeaderIconWrapperProps {\n  backgroundColor: BackgroundColorProperty\n}\n\nexport const CardHeaderIconWrapper: StyledComponent<\n  'div',\n  any,\n  ICardHeaderIconWrapperProps,\n  never\n> = styled.div`\n  border-radius: 999px;\n  overflow: hidden;\n  max-width: 4em;\n  width: 100%;\n  max-height: 4em;\n  height: 100%;\n  background: ${(props: ICardHeaderIconWrapperProps): BackgroundColorProperty =>\n    props.backgroundColor || '#DDD'};\n  padding: 0.5em;\n`\n\nexport const CardBody: StyledComponent<'main', any, {}, never> = styled.main`\n  position: relative;\n  padding: 2em;\n  grid-area: 'body';\n`\n\nexport const CardFooter: StyledComponent<\n  'footer',\n  any,\n  {},\n  never\n> = styled.footer`\n  background: #eee;\n  padding: 2em;\n  border-top: 1px solid grey;\n  grid-area: 'footer';\n\n  & span {\n    padding: 0 0.25em;\n  }\n`\n"],"sourceRoot":""}