{"version":3,"sources":["webpack:///./src/components/Relative.tsx","webpack:///./src/components/Absolute.tsx","webpack:///./src/components/ClippedBtn.tsx","webpack:///./src/components/SocialButtons.tsx","webpack:///./src/pages/contact.tsx","webpack:///./src/components/flex.tsx","webpack:///./src/components/DynamicIcon.tsx","webpack:///./node_modules/core-js/modules/es6.array.find.js"],"names":["Relative","styled","div","AbsoluteCenter","ClippedBtn","props","color","background","StyledDynamicIcon","SocialButtons","children","href","iconPath","target","DynamicIcon","path","justifyContent","SecondPage","title","description","columns","rows","StyledFlex","Flex","Img","query","render","file","images","edges","find","image","node","relativePath","fluid","childImageSharp","$export","$find","forced","Array","P","F","callbackfn","this","arguments","length","undefined"],"mappings":"uJAEaA,EAAWC,IAAOC,IAAV,+DAAGD,CAAH,wB,SCARE,EAAiBF,IAAOC,IAAV,0EAAGD,CAAH,qDCMdG,EAAaH,IAAOC,IAAV,iEAAGD,CAAH,qQAWV,SAACI,GAAD,OAA6BA,EAAMC,OAAS,WAEvC,SAACD,GAAD,OAA6BA,EAAME,YAAc,U,SCJ7DC,EAAoBP,IAAOC,IAAV,mFAAGD,CAAH,kCAKVQ,EAAgB,SAAC,GAAD,IAC3BC,EAD2B,EAC3BA,SACAJ,EAF2B,EAE3BA,MACAC,EAH2B,EAG3BA,WACAI,EAJ2B,EAI3BA,KACAC,EAL2B,EAK3BA,SAL2B,OAO3B,uBAAGD,KAAMA,EAAME,OAAO,SACpB,kBAACb,EAAD,KACE,kBAACQ,EAAD,KACE,kBAACM,EAAA,EAAD,CAAaC,KAAMH,KAErB,kBAACT,EAAD,KACE,kBAACC,EAAD,CAAYG,WAAYA,EAAYD,MAAOA,GACzC,kBAAC,IAAD,CAAMU,eAAe,gBACnB,8BAAON,SCQJO,UArCI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,UACNC,YAAY,mDAEd,6CACA,mLAIA,kBAAC,IAAD,CAAMC,QAAS,EAAGC,KAAM,GACtB,kBAAC,EAAD,CACEd,WAAW,UACXK,SAAS,iBACTD,KAAK,iCAHP,QAOA,kBAAC,EAAD,CACEJ,WAAW,UACXK,SAAS,qBACTD,KAAK,4DAHP,YAOA,kBAAC,EAAD,CACEJ,WAAW,UACXK,SAAS,oBACTD,KAAK,mDAHP,e,iCClCN,oBAUMW,EAVN,KAUmErB,EAAOC,IAAV,uEAAGD,CAAH,0KAEhD,SAACI,GAAD,OAAuBA,EAAME,YAAc,iBAKtC,SAACF,GAAD,OACjBA,EAAMW,gBAAkB,kBAkBbO,IANF,SAAC,GAAD,IAAGb,EAAH,EAAGA,SAAUH,EAAb,EAAaA,WAAYS,EAAzB,EAAyBA,eAAzB,OACX,kBAACM,EAAD,CAAYf,WAAYA,EAAYS,eAAgBA,GACjDN,K,uGCjBCF,EAAoBP,YAAOuB,KAAV,qFAAGvB,CAAH,0DAoDRa,IArCK,YAAsC,IAA3BC,EAA2B,EAA3BA,KAC7B,OACE,kBAAC,IAAD,CACEU,MAAK,aAmBLC,OAAQ,gBA9BOC,EA8BJC,EAAH,EAAGA,OAAH,OA9BOD,EAgCXC,EAAOC,MAAMC,MACX,SAACC,GAAD,OAAwBA,EAAMC,KAAKC,eAAiBlB,KAhCvD,kBAACP,EAAD,CAAmB0B,MAAOP,EAAKK,KAAKG,gBAAgBD,SASzD,W,iCC9BJ,IAAIE,EAAU,EAAQ,GAClBC,EAAQ,EAAQ,GAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CR,KAAM,SAAcY,GAClB,OAAOL,EAAMM,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,GAAR,CATU,S","file":"component---src-pages-contact-tsx-63e37d3d4edaa72ca30c.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Relative = styled.div`\n  position: relative;\n`\n","import styled from 'styled-components'\n\nexport const AbsoluteCenter = styled.div`\n  position: absolute;\n  top: 0;\n  /* z-index: 999; */\n  width: 100%;\n  height: 100%;\n`\n","import { ColorProperty, BackgroundColorProperty } from 'csstype'\nimport styled from 'styled-components'\n\ninterface IClippedBtnProps {\n  color?: ColorProperty\n  background?: BackgroundColorProperty\n}\n\nexport const ClippedBtn = styled.div`\n  color: transparent;\n  height: 100%;\n  font-size: 2em;\n  clip-path: circle(1em at 50% 50%);\n  background: transparent;\n  border-radius: 0.25em;\n  transition: color 0.1s ease-in 0.1s;\n  transition: all 0.25s ease-in-out;\n\n  :hover {\n    color: ${(props: IClippedBtnProps) => props.color || 'white'};\n    clip-path: circle(8em at 50% 50%);\n    background: ${(props: IClippedBtnProps) => props.background || 'grey'};\n  }\n`\n","import React, { ReactNode } from 'react'\nimport { ColorProperty, BackgroundColorProperty } from 'csstype'\nimport { Relative } from './Relative'\nimport DynamicIcon from './DynamicIcon'\nimport { AbsoluteCenter } from './Absolute'\nimport { ClippedBtn } from './ClippedBtn'\nimport Flex from './flex'\nimport styled from 'styled-components'\n\ninterface ISocialButtonsProps {\n  children: ReactNode\n  href: string\n  color?: ColorProperty\n  background?: BackgroundColorProperty\n  iconPath: string\n}\n\nconst StyledDynamicIcon = styled.div`\n  margin: 0 auto;\n  max-width: 4em;\n`\n\nexport const SocialButtons = ({\n  children,\n  color,\n  background,\n  href,\n  iconPath,\n}: ISocialButtonsProps) => (\n  <a href={href} target=\"blank\">\n    <Relative>\n      <StyledDynamicIcon>\n        <DynamicIcon path={iconPath} />\n      </StyledDynamicIcon>\n      <AbsoluteCenter>\n        <ClippedBtn background={background} color={color}>\n          <Flex justifyContent=\"space-around\">\n            <span>{children}</span>\n          </Flex>\n        </ClippedBtn>\n      </AbsoluteCenter>\n    </Relative>\n  </a>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { Grid } from '../components/grid'\nimport { SocialButtons } from '../components/SocialButtons'\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO\n      title=\"Contact\"\n      description=\"Get in touch with me through some social links\"\n    />\n    <h1>Get in touch!</h1>\n    <p>\n      I don't do Twitter and I don't really use Facebook other than checking it\n      about twice a year. However, there are other ways to get in touch with me.\n    </p>\n    <Grid columns={3} rows={1}>\n      <SocialButtons\n        background=\"#4C4C4C\"\n        iconPath=\"icons/mail.png\"\n        href=\"mailto://casimir.db@gmail.com\"\n      >\n        Mail\n      </SocialButtons>\n      <SocialButtons\n        background=\"#007AB9\"\n        iconPath=\"icons/linkedin.png\"\n        href=\"https://www.linkedin.com/in/casimir-de-bruijn-309990161/\"\n      >\n        LinkedIn\n      </SocialButtons>\n      <SocialButtons\n        background=\"#8C9EFF\"\n        iconPath=\"icons/discord.png\"\n        href=\"https://discordapp.com/users/187303558599671808\"\n      >\n        Discord\n      </SocialButtons>\n    </Grid>\n  </Layout>\n)\n\nexport default SecondPage\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\nimport { BackgroundColorProperty, JustifyContentProperty } from 'csstype'\n\ninterface IFlexProps {\n  children: ReactNode\n  background?: BackgroundColorProperty\n  justifyContent?: JustifyContentProperty\n}\n\nconst StyledFlex: StyledComponent<'div', any, IFlexProps, never> = styled.div`\n  position: relative;\n  background: ${(props: IFlexProps) => props.background || 'transparent'};\n\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: ${(props: IFlexProps) =>\n    props.justifyContent || 'space-around'};\n  transition: all 0.25s ease-in-out;\n\n  :hover {\n    background: transparent;\n  }\n\n  * {\n    /* flex-grow: 1; */\n  }\n`\n\nconst Flex = ({ children, background, justifyContent }: IFlexProps) => (\n  <StyledFlex background={background} justifyContent={justifyContent}>\n    {children}\n  </StyledFlex>\n)\n\nexport default Flex\n","import React from 'react'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\ninterface IFluidImage {\n  node: {\n    extension: string\n    relativePath: string\n    childImageSharp: {\n      fluid: FluidObject\n    }\n  }\n}\n\nconst StyledDynamicIcon = styled(Img)`\n  max-width: 4em;\n  width: 100%;\n  max-height: 4em;\n  height: 100%;\n`\n\nfunction renderImage(file: IFluidImage) {\n  return <StyledDynamicIcon fluid={file.node.childImageSharp.fluid} />\n}\n\ninterface IDynamicIconProps {\n  path: string\n}\n\nconst DynamicIcon = function({ path }: IDynamicIconProps) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          images: allFile(\n            filter: { extension: { regex: \"/jpeg|jpg|png|gif/\" } }\n          ) {\n            edges {\n              node {\n                extension\n                relativePath\n                childImageSharp {\n                  fluid(maxWidth: 128) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={({ images }) =>\n        renderImage(\n          images.edges.find(\n            (image: IFluidImage) => image.node.relativePath === path\n          ) // returns images like this node: {extension: \"png\", relativePath: \"gatsby-icon.png\", childImageSharp: {â€¦}}\n        )\n      }\n    />\n  )\n}\n\n/**\n * Question remains: how much impact will many (100s) of images have?\n */\n\nexport default DynamicIcon\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}