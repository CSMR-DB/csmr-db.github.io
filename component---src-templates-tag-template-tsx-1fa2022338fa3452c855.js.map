{"version":3,"sources":["webpack:///./src/components/ContentSeparator.tsx","webpack:///./src/components/compositions/card/projectcard/ProjectCard.tsx","webpack:///./src/components/ArticleBody.tsx","webpack:///./src/components/compositions/card/projectcard/ProjectCards.tsx","webpack:///./src/components/compositions/card/Card.tsx","webpack:///./src/components/Heart.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardIndicator.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardBackdrop.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardBody.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCardHeader.tsx","webpack:///./src/components/compositions/card/skillcard/SkillCard.tsx","webpack:///./src/components/compositions/card/CardBody.tsx","webpack:///./src/components/compositions/card/CardFooter.tsx","webpack:///./src/templates/TagTemplate.tsx","webpack:///./src/components/compositions/card/CardHeader.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/compositions/card/CardHeaderText.tsx"],"names":["ContentSeparator","styled","div","ProjectCard","index","image","video","title","body","tags","date","timeToRead","path","from","scale","opacity","duration","delay","ease","Card","CardHeader","CardHeaderImageOrVideo","CardHeaderText","StyledLink","to","DateFormatted","dateString","ReadingTime","CardBody","Array","isArray","map","string","i","url","href","target","key","text","ArticleBody","CardFooter","ArticleTags","ProjectCards","edges","node","frontmatter","featuredVideo","featuredImage","excerpt","article","theme","breakpoints","min","desktop","max","smartphone","StyledHeart","svg","fill","css","Heart","React","forwardRef","props","ref","viewBox","id","d","SkillCardIndicator","litColor","instance","width","height","StyledSkillCardBackdrop","attrs","className","SkillCardBackdrop","children","SkillCardBody","description","SkillCardHeader","StyledSkillCard","SkillCard","skillColor","time","x","DynamicImage","replace","toLocaleLowerCase","Flex","justifyContent","direction","color","count","Math","sqrt","main","footer","style","TagTemplate","data","markdownRemark","level","allMarkdownRemark","columns","maxWidth","pageQuery","header","LayoutMain","primary","primaryHover","StyledLayout","background","Layout","isLandingPage"],"mappings":"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","file":"component---src-templates-tag-template-tsx-1fa2022338fa3452c855.js","sourcesContent":["import styled, { StyledComponent } from 'styled-components'\n\nexport const ContentSeparator: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding-bottom: 4rem;\n`\n","import React from 'react'\nimport { Tween } from 'react-gsap'\n\nimport { StringOrUrlArray } from '../../../../types/StringOrUrlObject'\nimport { IFeaturedImage } from '../../../../types/interfaces'\n\nimport { Card } from '../Card'\nimport { ArticleBody } from '../../../ArticleBody'\nimport { CardHeaderImageOrVideo } from '../CardHeaderImageOrVideo'\nimport { ArticleTags } from '../../../ArticleTags'\nimport { StyledLink } from '../../../StyledLink'\nimport { DateFormatted } from '../../../DateFormatted'\nimport { ReadingTime } from '../../../ReadingTime'\nimport { CardHeader } from '../CardHeader'\nimport { CardFooter } from '../CardFooter'\nimport { CardBody } from '../CardBody'\nimport { CardHeaderText } from '../CardHeaderText'\n\ninterface IProjectCardProps {\n  index: number\n  image?: string | IFeaturedImage\n  video?: string\n  title: string\n  body?: StringOrUrlArray\n  tags?: string[]\n  html?: string\n  date?: string\n  timeToRead?: number\n  path: string\n}\n\nexport const ProjectCard: (props: IProjectCardProps) => JSX.Element = ({\n  index,\n  image,\n  video,\n  title,\n  body,\n  tags,\n  date,\n  timeToRead,\n  path,\n}: IProjectCardProps): JSX.Element => (\n  <Tween\n    from={{ scale: 0.75, opacity: 0 }}\n    duration={1}\n    delay={0.25 + index * 0.125}\n    ease=\"back\"\n  >\n    <Card>\n      <CardHeader>\n        <CardHeaderImageOrVideo video={video} image={image} />\n        <CardHeaderText>\n          <h1>\n            <StyledLink to={path}>{title}</StyledLink>\n          </h1>\n          <h6>\n            <DateFormatted dateString={date} />\n            <span> Â· </span>\n            <ReadingTime timeToRead={timeToRead} />\n          </h6>\n        </CardHeaderText>\n      </CardHeader>\n      <CardBody>{ArticleBody({ body })}</CardBody>\n      <CardFooter>\n        <ArticleTags tags={tags} />\n      </CardFooter>\n    </Card>\n  </Tween>\n)\n","import React from 'react'\n\nimport { StringOrUrlObject, StringOrUrlArray } from '../types/StringOrUrlObject'\n\nimport { StyledA } from './StyledLink'\n\ninterface IArticleBodyProps {\n  body?: StringOrUrlArray\n}\n\nexport function ArticleBody({ body }: IArticleBodyProps): JSX.Element | null {\n  return (\n    (body && (\n      <p>\n        {Array.isArray(body)\n          ? body.map((string: StringOrUrlObject, i: number):\n              | JSX.Element\n              | string => {\n              if (typeof string !== 'string' && string.url) {\n                return (\n                  <StyledA href={string.url} target=\"blank\" key={i}>\n                    {string.text}\n                  </StyledA>\n                )\n              }\n\n              return string as string\n            })\n          : body}\n      </p>\n    )) ||\n    null\n  )\n}\n","import React from 'react'\n\nimport { IProjectsAllMarkdownRemark, IEdge } from '../../../../types/interfaces'\n\nimport { ProjectCard } from './ProjectCard'\n\nexport function ProjectCards({\n  edges,\n}: IProjectsAllMarkdownRemark): JSX.Element {\n  return (\n    <>\n      {edges.map(\n        (\n          { node: { frontmatter, timeToRead } }: IEdge,\n          i: number\n        ): JSX.Element => (\n          <ProjectCard\n            title={frontmatter.title}\n            tags={frontmatter.tags}\n            video={frontmatter.featuredVideo}\n            image={frontmatter.featuredImage}\n            body={frontmatter.excerpt}\n            timeToRead={timeToRead}\n            path={frontmatter.path}\n            date={frontmatter.date}\n            key={i}\n            index={i}\n          />\n        )\n      )}\n    </>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\nimport { theme } from '../../../data/theme'\n\nexport const Card: StyledComponent<'article', any, {}, never> = styled.article`\n  position: relative;\n  height: 100%;\n  border-radius: 0.25rem;\n  display: grid;\n  grid-template-areas: 'header' 'body' 'footer';\n  grid-template-rows: auto 1fr auto;\n  overflow: hidden;\n  background: white;\n  box-shadow: 0 0.075rem 0.075rem rgba(0, 0, 0, 0.1),\n    0 0.125rem 0.125rem rgba(0, 0, 0, 0.25);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n  & header img {\n    transition: all 0.2s ease-in-out !important;\n  }\n\n  @media ${theme.breakpoints.min.desktop} {\n    &:hover {\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.25),\n        0 0.25rem 0.25rem rgba(0, 0, 0, 0.2);\n\n      & header img {\n        transform: scale(1.1);\n      }\n    }\n  }\n\n  & h1 {\n    font-size: 1.1em;\n    margin: 0;\n  }\n\n  & h2 {\n    font-size: 1em;\n    font-style: italic;\n    margin: 0;\n    color: #aaa;\n    margin-bottom: 1rem;\n  }\n\n  & p {\n    text-align: justify;\n\n    @media ${theme.breakpoints.max.smartphone} {\n      text-align: left;\n    }\n  }\n`\n","import React from 'react'\nimport styled, {\n  StyledComponent,\n  css,\n  FlattenSimpleInterpolation,\n} from 'styled-components'\nimport { FillProperty } from 'csstype'\n\nimport { AnyExoticRefComponent, AnyExoticRefTargets } from '../types/types'\n\nexport interface IHeartProps {\n  height: string\n  width: string\n  fill: FillProperty\n}\n\nexport const StyledHeart: StyledComponent<\n  'svg',\n  any,\n  IHeartProps,\n  never\n> = styled.svg`\n  ${({ fill }: IHeartProps): FlattenSimpleInterpolation => css`\n    fill: ${fill};\n  `}\n`\n\nexport const Heart: AnyExoticRefComponent<IHeartProps> = React.forwardRef(\n  (props: IHeartProps, ref: AnyExoticRefTargets): JSX.Element => (\n    <StyledHeart {...props} viewBox=\"0 0 315 342\" ref={ref}>\n      <g id=\"heart\">\n        <path d=\"M0 200 v-200 h200 a100,100 90 0,1 0,200 a100,100 90 0,1 -200,0 z\" />\n      </g>\n    </StyledHeart>\n  )\n)\n","import React from 'react'\nimport { ColorProperty } from 'csstype'\nimport { Tween } from 'react-gsap'\n\nimport { Heart } from '../../../Heart'\n\ninterface ISkillCardIndicator {\n  litColor: ColorProperty\n  index: number\n  instance: number\n}\n\nexport function SkillCardIndicator({\n  litColor,\n  index,\n  instance,\n}: ISkillCardIndicator): JSX.Element {\n  return (\n    <Tween\n      from={{ scale: 8, opacity: 0 }}\n      duration={0.125}\n      delay={1 + index / 8 + instance * 0.125}\n    >\n      <Heart fill={litColor} width={'1rem'} height={'1rem'} />\n    </Tween>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\nimport { Tween } from 'react-gsap'\n\nconst StyledSkillCardBackdrop: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div.attrs({ className: 'backdrop' })`\n  transition: all ease 0.5s;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  width: 100%;\n  max-width: 8rem;\n`\n\nexport function SkillCardBackdrop({\n  children,\n  index,\n}: {\n  children: ReactNode\n  index: number\n}): JSX.Element {\n  return (\n    <Tween\n      to={{ opacity: 0.25 }}\n      duration={1}\n      delay={1 + index * 0.125}\n      ease=\"power1\"\n    >\n      <StyledSkillCardBackdrop>{children}</StyledSkillCardBackdrop>\n    </Tween>\n  )\n}\n","import React from 'react'\nimport { Timeline, Tween } from 'react-gsap'\n\nimport {\n  StringOrUrlArray,\n  StringOrUrlObject,\n} from '../../../../types/StringOrUrlObject'\n\nimport { StyledA } from '../../../StyledLink'\n\ninterface ISkillCardBodyProps {\n  description: StringOrUrlArray\n  index: number\n}\nexport function SkillCardBody({\n  description,\n  index,\n}: ISkillCardBodyProps): JSX.Element {\n  return (\n    <Timeline>\n      <Tween\n        from={{ opacity: 0 }}\n        duration={1}\n        delay={1 + index * 0.125}\n        ease=\"power1\"\n      >\n        <p>\n          {Array.isArray(description)\n            ? description.map((string: StringOrUrlObject, i: number):\n                | JSX.Element\n                | string => {\n                if (typeof string !== 'string' && string.url !== '') {\n                  return (\n                    <StyledA href={string.url} target=\"blank\" key={i}>\n                      {string.text}\n                    </StyledA>\n                  )\n                }\n\n                return string as string\n              })\n            : description}\n        </p>\n      </Tween>\n    </Timeline>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const SkillCardHeader: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding: 2rem 2rem 0 2rem;\n\n  h1 {\n    font-size: 1rem;\n    font-weight: 100;\n    text-align: right;\n    align-self: normal;\n  }\n  h2 {\n    font-size: 0.8rem;\n    font-weight: 100;\n  }\n`\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\nimport { Tween } from 'react-gsap'\nimport { ColorProperty } from 'csstype'\n\nimport { StringOrUrlArray } from '../../../../types/StringOrUrlObject'\n\nimport { SkillCardIndicator } from './SkillCardIndicator'\nimport { SkillCardBackdrop } from './SkillCardBackdrop'\nimport { SkillCardBody } from './SkillCardBody'\nimport { SkillCardHeader } from './SkillCardHeader'\nimport { CardFooter } from '../CardFooter'\nimport { CardHeader } from '../CardHeader'\nimport { CardBody } from '../CardBody'\nimport { Flex } from '../../../Flex'\nimport { DynamicImage } from '../../../DynamicImage'\nimport { StyledLink } from '../../../StyledLink'\nimport { Card } from '../Card'\n\ninterface ISkillCardProps {\n  index: number\n  children?: ReactNode\n  level: number\n  title: string\n  description: StringOrUrlArray\n  skillColor: ColorProperty\n  time?: number\n}\n\nconst StyledSkillCard: StyledComponent<typeof Card, any, {}, never> = styled(\n  Card\n)`\n  &:hover {\n    .backdrop {\n      opacity: 0.75 !important;\n    }\n  }\n`\n\nexport function SkillCard({\n  index,\n  title,\n  description,\n  skillColor,\n  time = 0,\n}: ISkillCardProps): JSX.Element {\n  return (\n    <Tween\n      from={{ x: '-400px', opacity: 0 }}\n      duration={1}\n      delay={0.25 + index * 0.125}\n      ease=\"elastic\"\n    >\n      <StyledSkillCard>\n        <SkillCardBackdrop index={index}>\n          <DynamicImage\n            path={`code_icons/${title\n              .replace(/\\([0-9]*\\)|\\s+/gi, '')\n              .toLocaleLowerCase()}.png`}\n          />\n        </SkillCardBackdrop>\n        <CardHeader>\n          <SkillCardHeader>\n            <Flex justifyContent=\"space-between\" direction=\"row\">\n              <SkillCardIndicator\n                instance={index}\n                index={0}\n                litColor={skillColor}\n              ></SkillCardIndicator>\n              <h1>\n                <StyledLink\n                  to={`/tag/${title.toLocaleLowerCase().replace(/\\s+/gi, '_')}`}\n                  color={skillColor}\n                >\n                  {title}\n                </StyledLink>\n              </h1>\n            </Flex>\n          </SkillCardHeader>\n        </CardHeader>\n        <CardBody>\n          <SkillCardBody description={description} index={index} />\n        </CardBody>\n        <CardFooter>\n          <p>\n            (time spent:{' '}\n            <Tween\n              to={{ count: time }}\n              ease=\"none\"\n              duration={Math.sqrt(Math.sqrt(time)) * 0.5}\n            >\n              <span>0</span>\n            </Tween>{' '}\n            hours)\n          </p>\n        </CardFooter>\n      </StyledSkillCard>\n    </Tween>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardBody: StyledComponent<'main', any, {}, never> = styled.main`\n  position: relative;\n  padding: 2em;\n  grid-area: 'body';\n`\n","import styled, {\n  StyledComponent,\n  FlattenSimpleInterpolation,\n  css,\n} from 'styled-components'\n\ninterface ICardFooterProps {\n  style?: boolean\n}\n\nexport const CardFooter: StyledComponent<\n  'footer',\n  any,\n  ICardFooterProps,\n  never\n> = styled.footer`\n  ${({ style = false }: ICardFooterProps): FlattenSimpleInterpolation =>\n    style\n      ? css`\n          background: #eee;\n          padding: 2rem;\n          border-top: 1px solid #ddd;\n          grid-area: footer;\n        `\n      : css`\n          padding: 0 2rem 2rem;\n        `}\n`\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport {\n  IListItemData,\n  ISingleItemData,\n  ISkillsetFrontmatter,\n  IProjectFrontmatter,\n} from '../types/interfaces'\n\nimport { Layout } from '../components/Layout'\nimport { Grid } from '../components/Grid'\nimport { ContentSeparator } from '../components/ContentSeparator'\nimport { SkillCard } from '../components/compositions/card/skillcard/SkillCard'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport { ProjectCards } from '../components/compositions/card/projectcard/ProjectCards'\n\n// tslint:disable-next-line: no-default-export\nexport default function TagTemplate({\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        skillColor = 'black',\n        level = 0,\n        title = 'Placeholder',\n        excerpt: description = 'Description',\n        time = 0,\n      },\n    },\n    allMarkdownRemark: { edges },\n  }, // this prop will be injected by the GraphQL query below.\n}: IListItemData<IProjectFrontmatter> &\n  ISingleItemData<ISkillsetFrontmatter>): JSX.Element {\n  return (\n    <Layout>\n      <ContentSeparator>\n        <CenteredBlock>\n          <SkillCard\n            skillColor={skillColor}\n            level={level}\n            title={title}\n            description={description}\n            time={time}\n            index={0}\n          />\n        </CenteredBlock>\n      </ContentSeparator>\n      <ContentSeparator>\n        <Grid\n          columns={'repeat(auto-fill,minmax(32rem,1fr))'}\n          maxWidth={'100rem'}\n        >\n          <ProjectCards edges={edges} />\n        </Grid>\n      </ContentSeparator>\n    </Layout>\n  )\n}\n\n// tslint:disable-next-line: no-void-expression\nexport const pageQuery: void = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            excerpt\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 960) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            featuredVideo\n            date\n            tags\n          }\n          wordCount {\n            words\n            sentences\n            paragraphs\n          }\n          timeToRead\n          excerpt\n          id\n          html\n        }\n      }\n    }\n\n    markdownRemark(\n      frontmatter: { title: { eq: $tag }, path: { eq: \"/tag/\" } }\n    ) {\n      frontmatter {\n        path\n        title\n        excerpt\n        level\n        time\n        skillColor\n      }\n    }\n  }\n`\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardHeader: StyledComponent<\n  'header',\n  any,\n  {},\n  never\n> = styled.header`\n  grid-area: 'header';\n`\n","import styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nexport const LayoutMain: StyledComponent<'main', any, {}, never> = styled.main`\n  margin: 0 auto;\n  padding: 4rem 1rem;\n\n  a {\n    text-decoration: none;\n    color: ${theme.primary};\n\n    &:hover {\n      color: ${theme.primaryHover};\n    }\n  }\n\n  @media ${theme.breakpoints.max.smartphone} {\n    padding: 1rem;\n  }\n`\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nimport { LayoutMain } from './LayoutMain'\n\nexport interface ILayoutProps {\n  children?: ReactNode\n  isLandingPage?: boolean\n}\n\nexport const StyledLayout: StyledComponent<\n  'div',\n  any,\n  ILayoutProps,\n  never\n> = styled.div`\n  min-height: 100vh;\n\n  background: ${theme.background};\n`\n\nexport function Layout({\n  children,\n  isLandingPage = false,\n}: ILayoutProps): JSX.Element {\n  return (\n    <StyledLayout isLandingPage={isLandingPage}>\n      <LayoutMain>{children}</LayoutMain>\n    </StyledLayout>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardHeaderText: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding: 2em 2em 0 2em;\n\n  & > h6 {\n    margin-bottom: 0;\n  }\n`\n"],"sourceRoot":""}