{"version":3,"sources":["webpack:///./src/components/ContentSeparator.tsx","webpack:///./src/components/compositions/card/projectcard/ProjectCard.tsx","webpack:///./src/components/ArticleBody.tsx","webpack:///./src/components/compositions/card/projectcard/ProjectCards.tsx","webpack:///./src/components/compositions/card/Card.tsx","webpack:///./src/components/compositions/card/CardBody.tsx","webpack:///./src/components/compositions/card/CardFooter.tsx","webpack:///./src/pages/projects.tsx","webpack:///./src/components/compositions/card/CardHeader.tsx","webpack:///./src/layouts/ProjectsLayout.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/compositions/card/CardHeaderText.tsx"],"names":["ContentSeparator","styled","div","ProjectCard","index","image","video","title","body","tags","date","timeToRead","path","from","scale","opacity","duration","delay","ease","Card","CardHeader","CardHeaderImageOrVideo","CardHeaderText","StyledLink","to","DateFormatted","dateString","ReadingTime","CardBody","Array","isArray","map","string","i","url","href","target","key","text","ArticleBody","CardFooter","ArticleTags","ProjectCards","edges","node","frontmatter","featuredVideo","featuredImage","excerpt","article","theme","breakpoints","min","desktop","max","smartphone","main","footer","style","css","ProjectsPage","query","render","props","header","ProjectsLayout","programmingData","graphicDesignData","description","columns","maxWidth","LayoutMain","primary","primaryHover","StyledLayout","background","Layout","children","isLandingPage"],"mappings":"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","file":"component---src-pages-projects-tsx-ca59d936c2e45f55e737.js","sourcesContent":["import styled, { StyledComponent } from 'styled-components'\n\nexport const ContentSeparator: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding-bottom: 4rem;\n`\n","import React from 'react'\nimport { Tween } from 'react-gsap'\n\nimport { StringOrUrlArray } from '../../../../types/StringOrUrlObject'\nimport { IFeaturedImage } from '../../../../types/interfaces'\n\nimport { Card } from '../Card'\nimport { ArticleBody } from '../../../ArticleBody'\nimport { CardHeaderImageOrVideo } from '../CardHeaderImageOrVideo'\nimport { ArticleTags } from '../../../ArticleTags'\nimport { StyledLink } from '../../../StyledLink'\nimport { DateFormatted } from '../../../DateFormatted'\nimport { ReadingTime } from '../../../ReadingTime'\nimport { CardHeader } from '../CardHeader'\nimport { CardFooter } from '../CardFooter'\nimport { CardBody } from '../CardBody'\nimport { CardHeaderText } from '../CardHeaderText'\n\ninterface IProjectCardProps {\n  index: number\n  image?: string | IFeaturedImage\n  video?: string\n  title: string\n  body?: StringOrUrlArray\n  tags?: string[]\n  html?: string\n  date?: string\n  timeToRead?: number\n  path: string\n}\n\nexport const ProjectCard: (props: IProjectCardProps) => JSX.Element = ({\n  index,\n  image,\n  video,\n  title,\n  body,\n  tags,\n  date,\n  timeToRead,\n  path,\n}: IProjectCardProps): JSX.Element => (\n  <Tween\n    from={{ scale: 0.75, opacity: 0 }}\n    duration={1}\n    delay={0.25 + index * 0.125}\n    ease=\"back\"\n  >\n    <Card>\n      <CardHeader>\n        <CardHeaderImageOrVideo video={video} image={image} />\n        <CardHeaderText>\n          <h1>\n            <StyledLink to={path}>{title}</StyledLink>\n          </h1>\n          <h6>\n            <DateFormatted dateString={date} />\n            <span> Â· </span>\n            <ReadingTime timeToRead={timeToRead} />\n          </h6>\n        </CardHeaderText>\n      </CardHeader>\n      <CardBody>{ArticleBody({ body })}</CardBody>\n      <CardFooter>\n        <ArticleTags tags={tags} />\n      </CardFooter>\n    </Card>\n  </Tween>\n)\n","import React from 'react'\n\nimport { StringOrUrlObject, StringOrUrlArray } from '../types/StringOrUrlObject'\n\nimport { StyledA } from './StyledLink'\n\ninterface IArticleBodyProps {\n  body?: StringOrUrlArray\n}\n\nexport function ArticleBody({ body }: IArticleBodyProps): JSX.Element | null {\n  return (\n    (body && (\n      <p>\n        {Array.isArray(body)\n          ? body.map((string: StringOrUrlObject, i: number):\n              | JSX.Element\n              | string => {\n              if (typeof string !== 'string' && string.url) {\n                return (\n                  <StyledA href={string.url} target=\"blank\" key={i}>\n                    {string.text}\n                  </StyledA>\n                )\n              }\n\n              return string as string\n            })\n          : body}\n      </p>\n    )) ||\n    null\n  )\n}\n","import React from 'react'\n\nimport { IProjectsAllMarkdownRemark, IEdge } from '../../../../types/interfaces'\n\nimport { ProjectCard } from './ProjectCard'\n\nexport function ProjectCards({\n  edges,\n}: IProjectsAllMarkdownRemark): JSX.Element {\n  return (\n    <>\n      {edges.map(\n        (\n          { node: { frontmatter, timeToRead } }: IEdge,\n          i: number\n        ): JSX.Element => (\n          <ProjectCard\n            title={frontmatter.title}\n            tags={frontmatter.tags}\n            video={frontmatter.featuredVideo}\n            image={frontmatter.featuredImage}\n            body={frontmatter.excerpt}\n            timeToRead={timeToRead}\n            path={frontmatter.path}\n            date={frontmatter.date}\n            key={i}\n            index={i}\n          />\n        )\n      )}\n    </>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\nimport { theme } from '../../../data/theme'\n\nexport const Card: StyledComponent<'article', any, {}, never> = styled.article`\n  position: relative;\n  height: 100%;\n  border-radius: 0.25rem;\n  display: grid;\n  grid-template-areas: 'header' 'body' 'footer';\n  grid-template-rows: auto 1fr auto;\n  overflow: hidden;\n  background: white;\n  box-shadow: 0 0.075rem 0.075rem rgba(0, 0, 0, 0.1),\n    0 0.125rem 0.125rem rgba(0, 0, 0, 0.25);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n  & header img {\n    transition: all 0.2s ease-in-out !important;\n  }\n\n  @media ${theme.breakpoints.min.desktop} {\n    &:hover {\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.25),\n        0 0.25rem 0.25rem rgba(0, 0, 0, 0.2);\n\n      & header img {\n        transform: scale(1.1);\n      }\n    }\n  }\n\n  & h1 {\n    font-size: 1.1em;\n    margin: 0;\n  }\n\n  & h2 {\n    font-size: 1em;\n    font-style: italic;\n    margin: 0;\n    color: #aaa;\n    margin-bottom: 1rem;\n  }\n\n  & p {\n    text-align: justify;\n\n    @media ${theme.breakpoints.max.smartphone} {\n      text-align: left;\n    }\n  }\n`\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardBody: StyledComponent<'main', any, {}, never> = styled.main`\n  position: relative;\n  padding: 2em;\n  grid-area: 'body';\n`\n","import styled, {\n  StyledComponent,\n  FlattenSimpleInterpolation,\n  css,\n} from 'styled-components'\n\ninterface ICardFooterProps {\n  style?: boolean\n}\n\nexport const CardFooter: StyledComponent<\n  'footer',\n  any,\n  ICardFooterProps,\n  never\n> = styled.footer`\n  ${({ style = false }: ICardFooterProps): FlattenSimpleInterpolation =>\n    style\n      ? css`\n          background: #eee;\n          padding: 2rem;\n          border-top: 1px solid #ddd;\n          grid-area: footer;\n        `\n      : css`\n          padding: 0 2rem 2rem;\n        `}\n`\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\n\nimport { Layout } from '../components/Layout'\nimport { ProjectsLayout, IProjectsLayoutProps } from '../layouts/ProjectsLayout'\n\n// tslint:disable-next-line: no-void-expression\nconst PAGE_QUERY: void = graphql`\n  fragment SharedQuery on MarkdownRemarkConnection {\n    edges {\n      node {\n        frontmatter {\n          path\n          category\n          title\n          featuredVideo\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 960) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          excerpt\n          tags\n          date\n        }\n        wordCount {\n          words\n          sentences\n          paragraphs\n        }\n        timeToRead\n        excerpt\n        id\n      }\n    }\n  }\n\n  query {\n    programmingData: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          path: { regex: \"/projects/\" }\n          category: { eq: \"Programming\" }\n        }\n      }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      ...SharedQuery\n    }\n\n    graphicDesignData: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          path: { regex: \"/projects/\" }\n          category: { eq: \"Graphic Design\" }\n        }\n      }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      ...SharedQuery\n    }\n  }\n`\n\nfunction ProjectsPage(): JSX.Element {\n  return (\n    <Layout>\n      <StaticQuery\n        query={PAGE_QUERY}\n        render={(props: IProjectsLayoutProps): JSX.Element => (\n          <ProjectsLayout {...props} />\n        )}\n      />\n    </Layout>\n  )\n}\n\n// tslint:disable-next-line: no-default-export\nexport default ProjectsPage\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardHeader: StyledComponent<\n  'header',\n  any,\n  {},\n  never\n> = styled.header`\n  grid-area: 'header';\n`\n","import React from 'react'\nimport { Reveal } from 'react-gsap'\n\nimport { Grid } from '../components/Grid'\nimport { IProjectsAllMarkdownRemark } from '../types/interfaces'\nimport { SEO } from '../components/compositions/SEO'\nimport { CenteredBlock } from '../components/CenteredBlock'\nimport { ContentSeparator } from '../components/ContentSeparator'\nimport { ProjectCards } from '../components/compositions/card/projectcard/ProjectCards'\n\nexport interface IProjectsLayoutProps {\n  programmingData: IProjectsAllMarkdownRemark\n  graphicDesignData: IProjectsAllMarkdownRemark\n}\n\nexport function ProjectsLayout({\n  programmingData,\n  graphicDesignData,\n}: IProjectsLayoutProps): JSX.Element {\n  return (\n    <>\n      <SEO title=\"Projects\" description=\"These are some projects I did\" />\n      <ContentSeparator>\n        <CenteredBlock>\n          <h1>Hey! These are some of my projects</h1>\n          <p>\n            In chronological order, from newest to oldest. These are some\n            projects I worked on that I am proud of, that taught me a lot and /\n            or got me some decent grades.\n          </p>\n        </CenteredBlock>\n        <Grid\n          columns={'repeat(auto-fill, minmax(32rem,1fr))'}\n          maxWidth={'100rem'}\n        >\n          <Reveal>\n            <ProjectCards edges={programmingData.edges} />\n          </Reveal>\n        </Grid>\n      </ContentSeparator>\n      <ContentSeparator>\n        <CenteredBlock>\n          <h1>I have also done some Graphic Design stuff</h1>\n          <p>\n            Not everything in here has to do with programming. I also included\n            some projects I made using Adobe Illustrator and After Effects. The\n            first projects were part of courses in a timeframe of about 10\n            weeks. That meant going from 0 - 100 in roughly 10 weeks, allocating\n            time for other courses as well (about 4 at a time).\n          </p>\n        </CenteredBlock>\n        <Grid\n          columns={'repeat(auto-fill, minmax(32rem,1fr))'}\n          maxWidth={'100rem'}\n        >\n          <Reveal>\n            <ProjectCards edges={graphicDesignData.edges} />\n          </Reveal>\n        </Grid>\n      </ContentSeparator>\n    </>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nexport const LayoutMain: StyledComponent<'main', any, {}, never> = styled.main`\n  margin: 0 auto;\n  padding: 4rem 1rem;\n\n  a {\n    text-decoration: none;\n    color: ${theme.primary};\n\n    &:hover {\n      color: ${theme.primaryHover};\n    }\n  }\n\n  @media ${theme.breakpoints.max.smartphone} {\n    padding: 1rem;\n  }\n`\n","import React, { ReactNode } from 'react'\nimport styled, { StyledComponent } from 'styled-components'\n\nimport { theme } from '../data/theme'\n\nimport { LayoutMain } from './LayoutMain'\n\nexport interface ILayoutProps {\n  children?: ReactNode\n  isLandingPage?: boolean\n}\n\nexport const StyledLayout: StyledComponent<\n  'div',\n  any,\n  ILayoutProps,\n  never\n> = styled.div`\n  min-height: 100vh;\n\n  background: ${theme.background};\n`\n\nexport function Layout({\n  children,\n  isLandingPage = false,\n}: ILayoutProps): JSX.Element {\n  return (\n    <StyledLayout isLandingPage={isLandingPage}>\n      <LayoutMain>{children}</LayoutMain>\n    </StyledLayout>\n  )\n}\n","import styled, { StyledComponent } from 'styled-components'\n\nexport const CardHeaderText: StyledComponent<\n  'div',\n  any,\n  {},\n  never\n> = styled.div`\n  padding: 2em 2em 0 2em;\n\n  & > h6 {\n    margin-bottom: 0;\n  }\n`\n"],"sourceRoot":""}